{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/add-meeting-minutes/add-meeting-minutes.component.html","src/app/admissions/admissions.component.html","src/app/app.component.html","src/app/create-meeting/create-meeting.component.html","src/app/detailed-admission/detailed-admission.component.html","src/app/detailed-meeting/detailed-meeting.component.html","src/app/home-component/home-component.component.html","src/app/meetings-list/meetings-list.component.html","src/app/navigation-bar/navigation-bar.component.html","src/app/noaccess/noaccess.component.html","src/app/user-list/user-list.component.html","node_modules/tslib/tslib.es6.js","src/app/Models/AdmissionsModel.ts","src/app/Models/CreateMeetingModel.ts","src/app/Models/User.ts","src/app/Services/admissions.service.ts","src/app/Services/authorization-service.service.ts","src/app/Services/file.service.ts","src/app/Services/meeting.service.ts","src/app/add-meeting-minutes/add-meeting-minutes.component.css","src/app/add-meeting-minutes/add-meeting-minutes.component.ts","src/app/admissions/admissions.component.css","src/app/admissions/admissions.component.ts","src/app/app-routing.module.ts","src/app/app.component.css","src/app/app.component.ts","src/app/app.module.ts","src/app/create-meeting/create-meeting.component.css","src/app/create-meeting/create-meeting.component.ts","src/app/detailed-admission/detailed-admission.component.css","src/app/detailed-admission/detailed-admission.component.ts","src/app/detailed-meeting/detailed-meeting.component.css","src/app/detailed-meeting/detailed-meeting.component.ts","src/app/home-component/home-component.component.css","src/app/home-component/home-component.component.ts","src/app/meetings-list/meetings-list.component.css","src/app/meetings-list/meetings-list.component.ts","src/app/navigation-bar/navigation-bar.component.css","src/app/navigation-bar/navigation-bar.component.ts","src/app/noaccess/noaccess.component.css","src/app/noaccess/noaccess.component.ts","src/app/user-list/user-list.component.css","src/app/user-list/user-list.component.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<form class=\\\"m-5\\\">\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleFormControlInput1\\\">Meeting Minutes</label>\\n        <textarea [(ngModel)]=\\\"createMeetingModelObject.meetingMinutes\\\" name=\\\"meetingMinutes\\\"\\n            type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"exampleFormControlInput1\\\" placeholder=\\\"Input Meeting Minutes\\\" rows=\\\"10\\\">\\n            </textarea>\\n    </div>\\n    <button (click)=\\\"saveMeetingMinutes()\\\">Save</button>\\n    <button (click)=\\\"cancelInputingMeetingMinutes()\\\">Cancel</button>\\n</form>\"","export default \"<div [hidden]=\\\"loggedInUserDataFromDB==null\\\">\\n    <div [hidden]=\\\"loggedInUserDataFromDB.admissionApplicationReviewer!=true && loggedInUserDataFromDB.Role!='Admission'\\\">\\n<button *ngIf=\\\"loggedInUserDataFromDB.Role=='Admission'\\\" type=\\\"button\\\" class=\\\"btn btn-primary float-right\\\" (click)=\\\"addStudentApplication()\\\">Add Application</button>\\n<!--Add student admission application form-->\\n<div class=\\\"m-5 card\\\">\\n    <form class=\\\"m-5\\\" *ngIf=\\\"showAddStudentApplicationForm\\\">\\n        <div class=\\\"input-group\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n                <span class=\\\"input-group-text\\\" id=\\\"\\\">First and last name</span>\\n            </div>\\n            <input required #firstName=\\\"ngModel\\\" [(ngModel)]=\\\"admissionsModelObject.firstName\\\" name=\\\"firstName\\\"\\n                type=\\\"text\\\" class=\\\"form-control\\\">\\n            <input required #lastName=\\\"ngModel\\\" [(ngModel)]=\\\"admissionsModelObject.lastName\\\" name=\\\"lastName\\\" type=\\\"text\\\"\\n                class=\\\"form-control\\\">\\n        </div>\\n        <div class=\\\"alert alert-danger\\\"\\n            *ngIf=\\\"(firstName.touched && !firstName.valid)||(lastName.touched && !lastName.valid)\\\">*First and last names\\n            are\\n            required</div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"exampleFormControlInput1\\\">Student Id</label>\\n            <input required #studentId=\\\"ngModel\\\" [(ngModel)]=\\\"admissionsModelObject.studentId\\\" name=\\\"studentId\\\"\\n                type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"exampleFormControlInput1\\\" placeholder=\\\"7 digit student Id\\\">\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"(studentId.touched && !studentId.valid)\\\">*Student Id is required\\n            </div>\\n            <!--Use this for validating already taken student ID-->\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"studentId.touched && studentIdsForValidation.includes(admissionsModelObject.studentId)\\\">*Student id is already taken</div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <div class='row'>\\n                <div class='col-md-3'>\\n                    <label for=\\\"exampleFormControlSelect1\\\">GRE Verbal:</label>\\n                    <select required #greVerbalScore=\\\"ngModel\\\" [(ngModel)]=\\\"admissionsModelObject.greVerbalScore\\\"\\n                        name=\\\"greVerbalScore\\\" class=\\\"form-control\\\" id=\\\"exampleFormControlSelect1\\\">\\n                        <option *ngFor=\\\"let greVerbalScore of greVerbalPossibleScore\\\">{{greVerbalScore}}</option>\\n                    </select>\\n                    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"(greVerbalScore.touched && !greVerbalScore.valid)\\\">\\n                        *GRE Verbal score is required\\n                    </div>\\n                </div>\\n                <div class='col-md-3'>\\n                    <label for=\\\"exampleFormControlSelect1\\\">GRE Quant:</label>\\n                    <select required #greQuantScore=\\\"ngModel\\\" [(ngModel)]=\\\"admissionsModelObject.greQuantScore\\\"\\n                        name=\\\"greQuantScore\\\" class=\\\"form-control\\\" id=\\\"exampleFormControlSelect2\\\">\\n                        <option *ngFor=\\\"let greQuantScore of greVerbalPossibleScore\\\">{{greQuantScore}}</option>\\n                    </select>\\n                    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"(greQuantScore.touched && !greQuantScore.valid)\\\">\\n                        *GRE Quant score is required\\n                    </div>\\n                </div>\\n                <div class='col-md-3'>\\n                    <label for=\\\"exampleFormControlSelect1\\\">GRE Total:</label>\\n                    <input required #greTotalScore=\\\"ngModel\\\" [(ngModel)]=\\\"admissionsModelObject.greTotalScore\\\"\\n                        name=\\\"greTotalScore\\\" type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"exampleFormControlInput2\\\"\\n                        placeholder=\\\"total GRE\\\"\\n                        [value]=\\\"+(admissionsModelObject.greQuantScore)++(admissionsModelObject.greVerbalScore)\\\">\\n                    <!-- <select required #greTotalScore=\\\"ngModel\\\" [(ngModel)]=\\\"admissionsModelObject.greTotalScore\\\"\\n                        name=\\\"greTotalScore\\\" class=\\\"form-control\\\" id=\\\"exampleFormControlSelect1\\\"\\n                        [value]=\\\"+(admissionsModelObject.greQuantScore)++(admissionsModelObject.greVerbalScore)\\\"\\n                        >\\n                        <option *ngFor=\\\"let greTotalScore of greTotalPossibleScore\\\" [selected]=\\\"295\\\">{{greTotalScore}}</option>\\n                    </select> -->\\n                    <div class=\\\"alert alert-danger\\\"\\n                        *ngIf=\\\"greTotalScore.valid && +(admissionsModelObject.greTotalScore)!=+(admissionsModelObject.greQuantScore)++(admissionsModelObject.greVerbalScore)\\\">\\n                        *Invalid GRE Total. Total must be Verbal+Quant\\n                    </div>\\n                </div>\\n                <div class='col-md-3'>\\n                    <label for=\\\"exampleFormControlSelect1\\\">GRE Essay:</label>\\n                    <select required #greEssayScore=\\\"ngModel\\\" [(ngModel)]=\\\"admissionsModelObject.greEssayScore\\\"\\n                        name=\\\"greEssayScore\\\" class=\\\"form-control\\\" id=\\\"exampleFormControlSelect3\\\">\\n                        <option *ngFor=\\\"let greEssayScore of greEssayPossibleScore\\\">{{greEssayScore}}</option>\\n                    </select>\\n                    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"(greEssayScore.touched && !greEssayScore.valid)\\\">\\n                        *GRE Essay score is required\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class='form-group'>\\n            <div class='row'>\\n                <div class='col-md-8'>\\n                    <label>Intended Program</label>\\n                    <select required #intendedProgram='ngModel' [(ngModel)]='admissionsModelObject.intendedProgram'\\n                        name='intendedProgram' class=\\\"form-control\\\" id=\\\"exampleFormControlSelect4\\\">\\n                        <option *ngFor=\\\"let intendedProgram of ['CS','CIS','IT','DS']\\\">{{intendedProgram}}</option>\\n                    </select>\\n                    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"intendedProgram.touched && !intendedProgram.valid\\\">\\n                        *Program is mandatory\\n                    </div>\\n                </div>\\n                <div class='col-md-4'>\\n                    <label>GPA</label>\\n                    <input required #gpa=\\\"ngModel\\\" [(ngModel)]=\\\"admissionsModelObject.gpa\\\" name=\\\"gpa\\\" type=\\\"number\\\"\\n                        class=\\\"form-control\\\" id=\\\"exampleFormControlInput3\\\" placeholder=\\\"0.00\\\">\\n                    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"(gpa.touched && !gpa.valid)\\\">*GPA is required\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <!-- <div class='form-group'>\\n            <label>Intended Validators</label>\\n            <select multiple required #intendedValidators='ngModel'\\n                [(ngModel)]='admissionsModelObject.intendedValidators' name='intendedValidators' class='form-control'\\n                id=\\\"exampleFormControlSelect5\\\">\\n                <option *ngFor=\\\"let greTotalScore of greTotalPossibleScore\\\" [value]='greTotalScore'>{{greTotalScore}}</option>\\n            </select>\\n        </div> -->\\n        <div>\\n            <div *ngFor=\\\"let file of admissionsModelObject.downloadApplications ;index as i\\\">\\n                {{i+1}}.{{file.nameOfFileAsUploaded}}: Click<a style=\\\"color:#0000FF;\\\" (click)=open(file.linkToView)>here</a> to view\\n                <i (click)=deleteFile(file.uniqueNameForReference,i) class=\\\"far fa-times-circle\\\"></i>\\n                <i class=\\\"fas fa-file-download ml-3\\\" (click)=downloadFile(file.uniqueNameForReference,file.linkToView,file.typeOfFile)></i>\\n            </div>\\n            <input type=\\\"file\\\" (change)=\\\"uploadFile($event)\\\" accept=\\\".pdf\\\">\\n        </div>\\n        <button\\n            [disabled]=\\\"!firstName.valid || !lastName.valid || !studentId.valid || !greVerbalScore.valid || !greQuantScore.valid || !intendedProgram.valid || !gpa.valid || studentIdsForValidation.includes(admissionsModelObject.studentId)\\\"\\n            class=\\\"btn btn-primary\\\" (click)=\\\"saveAdmissionApplication()\\\">Save</button>\\n        <button class=\\\"btn\\\" (click)=\\\"cancel()\\\">cancel</button>\\n    </form>\\n</div>\\n<p-confirmDialog header=\\\"Confirmation\\\" icon=\\\"pi pi-exclamation-triangle\\\"></p-confirmDialog>\\n<!--Listing Data of students-->\\n<div [hidden]=\\\"showAddStudentApplicationForm\\\" class=\\\"container-fluid\\\">\\n    <div class=\\\"container\\\">\\n        <mat-form-field class=\\\"StyleForSearch\\\">\\n          <mat-label>Search</mat-label>\\n          <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"Ex. First name\\\">\\n        </mat-form-field>\\n      </div>\\n    <table mat-table [dataSource]=\\\"applicants\\\" matSort class=\\\"datatable mat-elevation-z8 pointer\\\">\\n\\n        <!--- Note that these columns can be defined in any order.\\n          The actual rendered columns are set as a property on the row definition\\\" -->\\n\\n        <!-- Position Column -->\\n        <ng-container hidden=\\\"loggedInUserDataFromDB.Role!='Admission'\\\" matColumnDef=\\\"Action\\\">\\n            <th mat-header-cell *matHeaderCellDef> Action </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"><button [disabled]=\\\"loggedInUserDataFromDB.Role!='Admission'\\\"><i class=\\\" m-2 fas fa-user-edit\\\"\\n                    (click)=\\\"$event.preventDefault(); $event.stopPropagation(); editButtonClicked(element)\\\"></i></button>\\n               <button [disabled]=\\\"loggedInUserDataFromDB.Role!='Admission'\\\"><i class=\\\"m-2 far fa-trash-alt\\\" (click)=\\\" $event.preventDefault(); $event.stopPropagation(); deleteApplication(element)\\\"></i></button> </td>\\n        </ng-container>\\n        <!--Date column-->\\n        <ng-container matColumnDef=\\\"date\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Date </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.date}} </td>\\n        </ng-container>\\n        <!-- studentId Column -->\\n        <ng-container matColumnDef=\\\"studentId\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Student Id </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.studentId}} </td>\\n        </ng-container>\\n        <!-- Name Column -->\\n        <ng-container matColumnDef=\\\"firstName\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> First Name </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.firstName}} </td>\\n        </ng-container>\\n\\n        <!-- Weight Column -->\\n        <ng-container matColumnDef=\\\"lastName\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Last Name </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.lastName}} </td>\\n        </ng-container>\\n\\n        <!-- Symbol Column -->\\n        <ng-container matColumnDef=\\\"greVerbalScore\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Verbal </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.greVerbalScore}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"greQuantScore\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Quant </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.greQuantScore}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"greTotalScore\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Total </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.greTotalScore}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"greEssayScore\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Essay </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.greEssayScore}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"intendedProgram\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Program </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.intendedProgram}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"gpa\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> GPA </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.gpa}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"status\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.status}} </td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr [ngClass]='row.status==\\\"Rejected\\\" ? \\\"styleRedBackGround\\\" : row.status==\\\"Accepted\\\" ? \\\"styleGreenBackGround\\\" : row.status==\\\"Under Review\\\" ? \\\"styleBrownBackGround\\\" : \\\"styleWhiteBackGround\\\"' mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"getPresentStudentDetails(row)\\\"></tr>\\n    </table>\\n</div>\\n</div >\\n<div *ngIf=\\\"loggedInUserDataFromDB.Role!='Admission' && loggedInUserDataFromDB.admissionApplicationReviewer==false\\\">\\n    <h4 style=\\\"color: red;\\\" class=\\\"px-4\\\">*You do not have access</h4>\\n</div>\\n</div>\"","export default \"<!--<ul>\\n  <li *ngFor=\\\"let user of users\\\">\\n{{user.Id}}\\n  </li>\\n</ul>-->\\n\\n<app-navigation-bar></app-navigation-bar>\\n<router-outlet></router-outlet>\\n<!--<app-add-meeting-minutes></app-add-meeting-minutes>-->\\n\\n\\n\\n\"","export default \"\\n<div class=\\\"m-5 card\\\">\\n  <form class=\\\"m-5\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"exampleFormControlInput1\\\">Subject</label>\\n      <input required #subject=\\\"ngModel\\\" [(ngModel)]=\\\"createMeetingModelObject.subject\\\" name=\\\"subject\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n        id=\\\"exampleFormControlInput1\\\" placeholder=\\\"Input subject\\\">\\n    </div>\\n    <div class=\\\"alert alert-danger\\\"\\n    *ngIf=\\\"(subject.touched && !subject.valid)\\\">*Subject is required\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"exampleFormControlInput1\\\">Date: </label>\\n      <mat-form-field>\\n        <mat-label>Choose a date</mat-label>\\n        <input required #date=\\\"ngModel\\\" [(ngModel)]=\\\"createMeetingModelObject.date\\\" format=\\\"YYYY/MM/DD\\\"\\n         name=\\\"date\\\" matInput [matDatepicker]=\\\"picker\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker></mat-datepicker>\\n      </mat-form-field>\\n    </div>\\n    <div class=\\\"alert alert-danger\\\"\\n    *ngIf=\\\"(date.touched && !date.valid)\\\">*Date is required\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-3\\\">\\n          <label for=\\\"exampleFormControlSelect1\\\">HH:</label>\\n          <select required #HH=\\\"ngModel\\\" [(ngModel)]=\\\"createMeetingModelObject.HH\\\" name=\\\"HH\\\" class=\\\"form-control\\\" id=\\\"exampleFormControlSelect1\\\">\\n            <option *ngFor=\\\"let time of ['01','02','03','04','05','06','07','08','09','10','11','12']\\\">{{time}}</option>\\n          </select>\\n          <div class=\\\"alert alert-danger\\\"\\n    *ngIf=\\\"(HH.touched && !HH.valid)\\\">*HH is required\\n    </div>\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n          <label for=\\\"exampleFormControlSelect1\\\">MM:</label>\\n          <select required #MM=\\\"ngModel\\\" [(ngModel)]=\\\"createMeetingModelObject.MM\\\" name=\\\"MM\\\" class=\\\"form-control\\\" id=\\\"exampleFormControlSelect2\\\">\\n            <option *ngFor=\\\"let time of ['00','01','02','03','04','05','06','07','08','09','10','11','12','13','14','15','16\\n            ','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31','32','33','34','35','\\n            36','37','38','39','40','41','42','43','44','45','46','47','48','49','50','51','52','53','54\\n            ','55','56','57','58','59']\\\">{{time}}</option>\\n          </select>\\n          <div class=\\\"alert alert-danger\\\"\\n    *ngIf=\\\"(MM.touched && !MM.valid)\\\">*MM is required\\n    </div>\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n          <label for=\\\"exampleFormControlSelect1\\\">AM/PM:</label>\\n        <select required #noon=\\\"ngModel\\\" [(ngModel)]=\\\"createMeetingModelObject.noon\\\" name=\\\"noon\\\" class=\\\"form-control\\\" id=\\\"exampleFormControlSelect3\\\">\\n          <option *ngFor=\\\"let time of ['AM','PM']\\\">{{time}}</option>\\n        </select>\\n        <div class=\\\"alert alert-danger\\\"\\n    *ngIf=\\\"(noon.touched && !noon.valid)\\\">*Noon is required\\n    </div>\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n          <label for=\\\"exampleFormControlSelect1\\\">Duration(in minutes):</label>\\n        <select required #duration=\\\"ngModel\\\" [(ngModel)]=\\\"createMeetingModelObject.duration\\\" name=\\\"duration\\\" class=\\\"form-control\\\" id=\\\"exampleFormControlSelect4\\\">\\n          <option *ngFor=\\\"let time of ['30','45','60','90','120','180']\\\">{{time}}</option>\\n        </select>\\n        <div class=\\\"alert alert-danger\\\"\\n    *ngIf=\\\"(duration.touched && !duration.valid)\\\">*duration is required\\n    </div>\\n        </div>\\n      </div>\\n    </div>\\n    \\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"exampleFormControlInput1\\\">Facilitated By</label>\\n      <select required #facilitatedBy=\\\"ngModel\\\" [(ngModel)]=\\\"createMeetingModelObject.facilitatedBy\\\" name=\\\"facilitatedBy\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n        id=\\\"exampleFormControlInput1\\\" placeholder=\\\"Input Facilitator\\\">\\n        <option *ngFor=\\\"let chair of chairs\\\" [value]=\\\"chair\\\">{{chair}}</option>\\n      </select>\\n    </div>\\n    <div class=\\\"alert alert-danger\\\"\\n    *ngIf=\\\"(facilitatedBy.touched && !facilitatedBy.valid)\\\">*Facilitated by is required\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"exampleFormControlInput1\\\">programs: </label>\\n      <div class=\\\"form-check form-check-inline\\\">\\n        <input  class=\\\"form-check-input\\\" (change)=\\\"onCheck($event)\\\"\\n          [(ngModel)]=\\\"createMeetingModelObject.inlineCheckbox1\\\" name=\\\"inlineCheckbox1\\\" type=\\\"checkbox\\\"\\n          id=\\\"inlineCheckbox1\\\" value=\\\"option1\\\">\\n        <label class=\\\"form-check-label\\\" for=\\\"inlineCheckbox1\\\">All</label>\\n      </div>\\n      <div class=\\\"form-check form-check-inline\\\">\\n        <input class=\\\"form-check-input\\\"\\n          [(ngModel)]=\\\"createMeetingModelObject.inlineCheckbox2\\\" name=\\\"inlineCheckbox2\\\" type=\\\"checkbox\\\"\\n          id=\\\"inlineCheckbox2\\\" value=\\\"option2\\\" [disabled]=\\\"disableCheckBox\\\">\\n        <label class=\\\"form-check-label\\\" for=\\\"inlineCheckbox2\\\">CS</label>\\n      </div>\\n      <div class=\\\"form-check form-check-inline\\\">\\n        <input class=\\\"form-check-input\\\"\\n          [(ngModel)]=\\\"createMeetingModelObject.inlineCheckbox3\\\" name=\\\"inlineCheckbox3\\\" type=\\\"checkbox\\\"\\n          id=\\\"inlineCheckbox3\\\" value=\\\"option3\\\" [disabled]=\\\"disableCheckBox\\\">\\n        <label class=\\\"form-check-label\\\" for=\\\"inlineCheckbox3\\\">CIS</label>\\n      </div>\\n      <div class=\\\"form-check form-check-inline\\\">\\n        <input class=\\\"form-check-input\\\"\\n          [(ngModel)]=\\\"createMeetingModelObject.inlineCheckbox4\\\" name=\\\"inlineCheckbox4\\\" type=\\\"checkbox\\\"\\n          id=\\\"inlineCheckbox4\\\" value=\\\"option4\\\" [disabled]=\\\"disableCheckBox\\\">\\n        <label class=\\\"form-check-label\\\" for=\\\"inlineCheckbox4\\\">IT</label>\\n      </div>\\n      <div class=\\\"form-check form-check-inline\\\">\\n        <input class=\\\"form-check-input\\\"\\n          [(ngModel)]=\\\"createMeetingModelObject.inlineCheckbox5\\\" name=\\\"inlineCheckbox5\\\" type=\\\"checkbox\\\"\\n          id=\\\"inlineCheckbox5\\\" value=\\\"option5\\\" [disabled]=\\\"disableCheckBox\\\">\\n        <label class=\\\"form-check-label\\\" for=\\\"inlineCheckbox5\\\">DS</label>\\n      </div>\\n    </div>\\n    <div class=\\\"alert alert-danger\\\"\\n    *ngIf=\\\"(!createMeetingModelObject.inlineCheckbox1 && !createMeetingModelObject.inlineCheckbox2\\n    &&!createMeetingModelObject.inlineCheckbox3 && !createMeetingModelObject.inlineCheckbox4\\n    && !createMeetingModelObject.inlineCheckbox5)\\\">*Program is required\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"exampleFormControlInput1\\\"> Agenda</label>\\n      <!--Looping into Agenda Main Array-->\\n      <div class =\\\"row\\\" *ngFor=\\\"let item of items; index as j\\\">\\n        <div class=\\\"col-md-9\\\">\\n          <label for=\\\"exampleFormControlInput1\\\"> Agenda item</label>\\n        <textarea required #itemId=\\\"ngModel\\\" [(ngModel)]=\\\"item.agenda\\\" name=\\\"{{item.id}}agenda\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n         placeholder=\\\"Input Agenda\\\" rows=1></textarea>\\n\\n         <div class=\\\"alert alert-danger\\\"\\n          *ngIf=\\\"(itemId.touched && item.agenda=='')\\\">*Agenda Item is required\\n          </div>\\n\\n           <!--Looping into subAgenda Array-->\\n          <div class=\\\"row\\\" *ngFor=\\\"let subItem of subagendaItemsarray[j];index as i\\\">     \\n           <div class=\\\"container\\\">\\n            <label class='px-3'>Sub Agenda Item</label>\\n             <div class=\\\"d-flex px-3\\\">\\n              <textarea [(ngModel)]=\\\"subItem.subAgenda\\\" name=\\\"{{j}}{{i}}subAgendaItem\\\" type= \\\"text\\\" class=\\\"form-control\\\" \\n              placeholder=\\\"Input Agenda Subitem\\\" rows=\\\"1\\\"></textarea>\\n            <div class=\\\"d-flex align-items-center ml-2\\\"> \\n              <i class=\\\"m-2 far fa-trash-alt\\\" (click)=deleteSubAgendaItem(item,subItem)></i>\\n              <i class=\\\"fas fa-plus\\\" (click)=addSubSubAgendaItem(item,subItem)></i>\\n            </div>  \\n          </div>    \\n          </div>\\n        \\n         <!--Looping into subOfSubAgenda Array-->\\n            <div  class='ml-4' *ngFor=\\\"let subOfSubItem of subItem.subOfSubAgendaItems;index as k\\\">  \\n              <div class=\\\"container\\\">\\n              <label class='styleForTextArea'>Sub of Sub Agenda Item</label>\\n              <div class=\\\"d-flex\\\">\\n              <textarea [(ngModel)]=\\\"subOfSubItem.subofSubAgenda\\\" name=\\\"{{j}}{{i}}{{k}}subOfSubAgendaItem\\\" type= \\\"text\\\" class=\\\"form-control \\\" \\n              placeholder=\\\"Input Agenda SubofSubitem\\\" rows=\\\"1\\\"></textarea>\\n              <div class=\\\"d-flex ml-2\\\">\\n              <i class=\\\"m-2 far fa-trash-alt\\\" (click)=deleteSubOfSubAgendaItem(j,i,subOfSubItem)></i>\\n              </div>\\n            </div>\\n            </div>\\n          </div> \\n          </div>\\n        </div>\\n         <div class=\\\"col-md-2\\\">\\n         <label for=\\\"exampleFormControlSelect1\\\">Duration(in minutes):</label>\\n        <select required #durationForAgendaItem=\\\"ngModel\\\" [(ngModel)]=\\\"item.duration\\\" name=\\\"{{item.id}}duration\\\" class=\\\"form-control\\\">\\n          <option *ngFor=\\\"let time of ['05','10','15','20','25','30']\\\">{{time}}</option>\\n        </select>\\n        <!--<div class=\\\"alert alert-danger\\\"\\n          *ngIf=\\\"(durationForAgendaItem.touched && !(durationForAgendaItem=='O5'))\\\">*Duration is required\\n          </div>-->\\n        </div>\\n        <div class=\\\"col-md-1\\\">\\n          <label>Action:</label>\\n        <i class=\\\"m-2 far fa-trash-alt\\\" (click)=deleteAgendaItem(item)></i>\\n        <i class=\\\"fas fa-plus\\\" (click)=addNewSubAgendaItem(item)></i>\\n        </div>\\n        </div>\\n        <button (click)=newAgendaItem()>Add</button>\\n        <button (click)=cancelAgendaItemInput()>Cancel</button>\\n        \\n    </div>\\n    <button [disabled]=\\\"!subject.valid || !date.valid || !HH.valid || !MM.valid || !noon.valid || !facilitatedBy.valid || (!createMeetingModelObject.inlineCheckbox1 && !createMeetingModelObject.inlineCheckbox2\\n    &&!createMeetingModelObject.inlineCheckbox3 && !createMeetingModelObject.inlineCheckbox4\\n    && !createMeetingModelObject.inlineCheckbox5)\\\" class=\\\"btn btn-primary\\\" (click)=\\\"submitToSaveMeeting()\\\">Save</button>\\n    <button  class=\\\"btn\\\" (click)=\\\"cancel()\\\">cancel</button>\\n  </form>\\n  \\n</div>\\n<p-confirmDialog header=\\\"Confirmation\\\" icon=\\\"pi pi-exclamation-triangle\\\"></p-confirmDialog>\\n\\n\"","export default \"<div *ngIf=\\\"loggedInUserDataFromDB!=null\\\">\\n<div *ngIf=\\\"loggedInUserDataFromDB.Role=='Admission' || loggedInUserDataFromDB.admissionApplicationReviewer==true\\\">\\n<div  class='container-fluid' *ngIf=\\\"selectedStudent!=null\\\">\\n<p><b>Student name:</b> {{selectedStudent.firstName}} {{selectedStudent.lastName}}</p>\\n<p><b>Student Id:</b> {{selectedStudent.studentId}}</p>\\n<p><b>GRE-verbal Score:</b> {{selectedStudent.greVerbalScore}}</p>\\n<p><b>GRE-Quant Score:</b> {{selectedStudent.greQuantScore}}</p>\\n<p><b>GRE-Total Score:</b> {{selectedStudent.greTotalScore}}</p>\\n<p><b>GRE-Essay Score:</b> {{selectedStudent.greEssayScore}}</p>\\n<p><b>Intended Program:</b> {{selectedStudent.intendedProgram}}</p>\\n<p><b>GPA:</b>{{selectedStudent.gpa}}</p>\\n<p><b>Status:</b> {{selectedStudent.status}}</p>\\n<p><b>Files Available:</b></p>\\n<p *ngFor=\\\"let file of selectedStudent.downloadApplications; index as i\\\">\\n    {{i+1}}.{{file.nameOfFileAsUploaded}}: Click <a style=\\\"color:#0000FF;\\\" (click)=open(file.linkToView)>here</a> to view\\n                <i class=\\\"fas fa-file-download ml-3\\\" (click)=downloadFile(file.uniqueNameForReference,file.linkToView,file.typeOfFile)></i>\\n</p>\\n<p>Accepts:{{selectedStudent.accepts.length}} Rejects:{{selectedStudent.rejects.length}}</p>\\n\\n<button *ngIf=\\\"loggedInUserDataFromDB.admissionApplicationReviewer==true\\\" (click)=\\\"acceptAdmission($event)\\\" value=\\\"Accept\\\">Accept</button><button *ngIf=\\\"loggedInUserDataFromDB.admissionApplicationReviewer==true\\\" (click)=\\\"rejectAdmission()\\\">Reject</button>\\n<textarea class='row container-fluid' *ngIf=\\\"showCommentSection\\\" rows=\\\"4\\\" [(ngModel)]=\\\"commentText\\\"></textarea>\\n<button *ngIf=\\\"showCommentSection\\\" class='row' (click)=\\\"saveComment()\\\">Save Comment</button>\\n<div *ngIf=\\\"showRejectOptions\\\" class='form-group'>\\n    <label>Rejection Reasons</label>\\n    <select multiple required\\n        [(ngModel)]=\\\"rejectionReasons\\\" name='rejectionReasons' class='form-control'\\n        id=\\\"exampleFormControlSelect10\\\">\\n        <option *ngFor=\\\"let reason of rejectionPossibleReasons\\\" [value]='reason'>{{reason}}</option>\\n    </select>\\n    <button (click)=\\\"saveRejectionReasons($event)\\\" value=\\\"Reject\\\">Save Reasons</button>\\n</div>\\n<p><b>Comments/Reasons</b></p>\\n<p *ngFor=\\\"let comment of selectedStudent.comments\\\"><b>{{comment.commentedBy}}: {{comment.decision}}--> </b>{{comment.comment}}</p>\\n<p *ngFor=\\\"let reason of selectedStudent.rejectionReasonsFromModel | keyvalue\\\"><b>{{reason.key}}: </b>{{reason.value}}</p>\\n<p-confirmDialog header=\\\"Confirmation\\\" icon=\\\"pi pi-exclamation-triangle\\\"></p-confirmDialog>\\n</div>\\n<div *ngIf=\\\"selectedStudent==null\\\">\\n    <h4 style=\\\"color: red;\\\" class=\\\"px-4\\\">*No Application is Selected</h4>\\n</div>\\n</div>\\n<div *ngIf=\\\"loggedInUserDataFromDB.Role!='Admission' && loggedInUserDataFromDB.admissionApplicationReviewer!=true\\\">\\n    <h4 style=\\\"color: red;\\\" class=\\\"px-4\\\">*You do not have access</h4>\\n</div>\\n</div>\"","export default \"<div class='container-fluid' *ngIf=\\\"loggedInUserDataFromDB!=null && selectedMeeting!=null\\\">\\n    <div *ngIf=\\\"loggedInUserDataFromDB.Role=='Chair' || loggedInUserDataFromDB.Role=='Faculty'\\\">\\n    \\n    <!--<div class=\\\"container\\\" *ngIf=\\\"downloadURL | async; let url\\\">\\n        <img [src]=\\\"url\\\" alt=\\\"Image from AngularFireStorage\\\">\\n      </div>-->\\n      <div *ngIf=\\\"loggedInUserDataFromDB.Role=='Chair'\\\" class=\\\"float-right\\\">\\n          <button [disabled]=\\\"selectedMeeting.finalised\\\" (click)=\\\"deleteMeeting()\\\">Delete Meeting</button>\\n          <button [disabled]=\\\"selectedMeeting.finalised || editingVariable\\\" (click)=\\\"editMeeting()\\\">Edit Meeting</button>\\n          <button [disabled]=\\\"selectedMeeting.finalised || !editingVariable\\\" (click)=\\\"saveChanges()\\\">Save Changes</button>\\n      </div>\\n\\n    <h3>Subject:<input [(ngModel)]=\\\"selectedMeeting.subject\\\" [ngClass]=\\\"{styleForInput:!editingVariable || selectedMeeting.finalised}\\\" [readonly]=\\\"!editingVariable || selectedMeeting.finalised\\\" type=\\\"text\\\"></h3>\\n    <h6>Date:<input [(ngModel)]=\\\"selectedMeeting.date\\\" [ngClass]=\\\"{styleForInput:!editingVariable || selectedMeeting.finalised}\\\" [readonly]=\\\"!editingVariable || selectedMeeting.finalised\\\" type=\\\"text\\\"></h6>\\n    <h6>Time:<input [(ngModel)]=\\\"selectedMeeting.time\\\" [ngClass]=\\\"{styleForInput:!editingVariable || selectedMeeting.finalised}\\\" [readonly]=\\\"!editingVariable || selectedMeeting.finalised\\\" type=\\\"text\\\"></h6>\\n    <h6>Duration:<input [(ngModel)]=\\\"selectedMeeting.duration\\\" [ngClass]=\\\"{styleForInput:!editingVariable || selectedMeeting.finalised}\\\" [readonly]=\\\"!editingVariable || selectedMeeting.finalised\\\" type=\\\"text\\\"></h6>\\n    <h6>Department:{{selectedMeeting.department}}</h6>\\n    <h6>Facilitated by:<input [(ngModel)]=\\\"selectedMeeting.facilitatedBy\\\" [ngClass]=\\\"{styleForInput:!editingVariable || selectedMeeting.finalised}\\\" [readonly]=\\\"!editingVariable || selectedMeeting.finalised\\\" type=\\\"text\\\"></h6>\\n    <h6>Agenda List: </h6>\\n    <!--Looping into AgendaList-->\\n    <div *ngFor=\\\"let item of agendaList;index as i\\\">\\n        <h6>{{i+1}}.{{item.agenda}}</h6>\\n        <textarea *ngIf=\\\"item.subAgendaItems.length ==0 \\\"class=\\\"col-md-11\\\" width='100%' rows=\\\"5\\\"\\n               [readonly]=\\\"loggedInUserDataFromDB.Role=='Faculty' || selectedMeeting.finalised\\\" name=\\\"{{i}}meetingMinutes\\\"\\n               [(ngModel)]=\\\"item.meetingMinutes\\\"></textarea>\\n        <!--Looping into subAgenda List-->\\n        <div *ngFor=\\\"let subAgendaItem of item.subAgendaItems;index as j\\\">\\n            <h6>{{i+1}}.{{j+1}}.{{subAgendaItem.subAgenda}}</h6>\\n           <textarea *ngIf=\\\"subAgendaItem.subOfSubAgendaItems.length ==0 \\\"class=\\\"col-md-11\\\" width='100%' rows=\\\"5\\\"\\n               [readonly]=\\\"loggedInUserDataFromDB.Role=='Faculty' || selectedMeeting.finalised\\\" name=\\\"{{i}}{{j}}meetingMinutes\\\"\\n               [(ngModel)]=\\\"subAgendaItem.meetingMinutes\\\"></textarea>\\n           <!-- Looping into sub of sub agendaItems-->\\n           <div *ngFor=\\\"let subOfSubAgendaItem of subAgendaItem.subOfSubAgendaItems;index as k\\\">\\n               <h6>{{i+1}}.{{j+1}}.{{k+1}}.{{subOfSubAgendaItem.subofSubAgenda}}</h6>\\n               <textarea class=\\\"col-md-11\\\" width='100%' rows=\\\"5\\\"\\n               [readonly]=\\\"loggedInUserDataFromDB.Role=='Faculty' || selectedMeeting.finalised\\\" name=\\\"{{i}}{{j}}{{k}}meetingMinutes\\\"\\n               [(ngModel)]=\\\"subOfSubAgendaItem.meetingMinutes\\\"></textarea>\\n           </div>\\n        </div>\\n       <!-- <textarea class=\\\"col-md-11\\\" width='100%' rows=\\\"5\\\"\\n            [readonly]=\\\"loggedInUserDataFromDB.Role=='Faculty' || selectedMeeting.finalised\\\" name=\\\"{{item.id}}meetingMinutes\\\"\\n            [(ngModel)]=\\\"item.meetingMinutes\\\"></textarea>-->\\n    </div>\\n    <div *ngIf=\\\"loggedInUserDataFromDB.Role=='Chair'\\\">\\n        <button [disabled]=\\\"selectedMeeting.finalised\\\" (click)=showAddMeetingMinutesForm()>Save meeting minutes</button>\\n        <button [disabled]=\\\"selectedMeeting.finalised\\\" (click)=saveMeetingMinutesAndSendEmail()>Save and Send Email</button>\\n        <button [disabled]=\\\"selectedMeeting.finalised\\\" (click)=finaliseMeetingMinutes() class=\\\"btn btn-primary\\\">Finalise</button>\\n    </div>\\n        <h6>Approvals:{{selectedMeeting.approvals.length}} Rejects:{{selectedMeeting.rejects.length}}</h6>\\n        <h5>Comment section:</h5>\\n        <div *ngFor=\\\"let item of selectedMeeting.comments; index as i \\\">\\n            <p>{{i+1}}. {{item}} </p>\\n\\n        </div>\\n    \\n    <div *ngIf=\\\"loggedInUserDataFromDB.Role=='Faculty'\\\">\\n        <div>\\n        <button (click)=approveButtonClicked()>Approve</button>\\n        <button (click)=rejectButtonClicked()>Reject</button>\\n    </div>\\n        <textarea [(ngModel)]=\\\"comment\\\" *ngIf=\\\"rejectClicked\\\" class=\\\"col-md-10\\\" rows=\\\"2\\\" placeholder=\\\"Input Comment\\\"></textarea>\\n    </div>\\n    <div *ngIf=\\\"rejectClicked\\\">\\n        <button (click)=cancelCommentSection()>Cancel</button>\\n        <button (click)=saveComment()>Done</button>\\n    </div>\\n    <div *ngIf=\\\"loggedInUserDataFromDB.Role=='Chair'\\\">\\n        <h6>Attendance:</h6>\\n         <!-- <p-multiSelect [options]=\\\"usersForAttendance\\\" [(ngModel)]=\\\"selectedMeeting.attendees\\\" [filter]=\\\"true\\\" [panelStyle]=\\\"{minWidth:'12em'}\\\">\\n            <ng-template let-attendees pTemplate=\\\"selectedItems\\\"> -->\\n                <!--<span *ngFor=\\\"let selectedUser of attendees\\\">{{userForAttendance.firstName}}</span>-->\\n            <!-- </ng-template>\\n            <ng-template let-userForAttendance let-i=\\\"index\\\" pTemplate=\\\"item\\\">\\n                {{i}}\\n                <div style=\\\"font-size:14px;float:right;margin-top:4px\\\">{{userForAttendance.lastName}}</div>\\n            </ng-template>\\n        </p-multiSelect>\\n        <p>Attendees: {{selectedMeeting.attendees}}</p>-->\\n        <mat-form-field>\\n            <mat-label>Attendance</mat-label>\\n            <mat-select [formControl]=\\\"attendance\\\" multiple [(ngModel)]=\\\"selectedMeeting.attendees\\\">\\n                <mat-option  (click)=selectingAllForAttendance() [value]='isempty'>SelectAll</mat-option>\\n              <mat-option  *ngFor=\\\"let selectedUser of dataForAttendance;index as i\\\" [value]='selectedUser.emailId'>{{selectedUser.firstName}} {{selectedUser.lastName}}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n          <button [disabled]=\\\"selectedMeeting.finalised\\\" (click)=updatingAttendanceToDataBase()>Save Attendance</button>\\n          <h6>Attendees:</h6>\\n          <p *ngFor=\\\"let attendee of selectedMeeting.attendees ; index as i\\\">{{i+1}}. {{attendee}}</p>\\n          <!-----------------------------------------------\\n          <ng-multiselect-dropdown-angular7 \\n          [data]=\\\"dataForAttendance\\\" \\n          [(ngModel)]=\\\"selectedMeeting.attendees\\\" \\n          [settings]=\\\"dropDownSettings\\\"\\n          (onSelect)=\\\"onItemSelect($event)\\\"\\n          (onSelectAll)=\\\"onSelectAll($event)\\\">\\n\\n            </ng-multiselect-dropdown-angular7>-->\\n              \\n          \\n          <!--<p-multiSelect [options]=\\\"dataForAttendance\\\" [(ngModel)]=\\\"selectedMeeting.attendees\\\" [panelStyle]=\\\"{minWidth:'12em'}\\\">\\n            <ng-template let-value pTemplate=\\\"selectedItems\\\">\\n                <div *ngFor=\\\"let val of value\\\" class=\\\"ui-multiselected-item-token ui-corner-all\\\">\\n                    <span>{{val}}</span>\\n                </div>\\n                <span *ngIf=\\\"!value || value.length === 0\\\" class=\\\"ui-multiselected-empty-token ui-corner-all\\\">Choose</span>\\n            </ng-template>\\n            <ng-template let-car pTemplate=\\\"item\\\">\\n                <img src=\\\"assets/showcase/images/demo/car/{{car.label}}.png\\\" style=\\\"width:24px;vertical-align:middle\\\" />\\n                <div style=\\\"font-size:14px;float:right;margin-top:4px\\\">{{car.label}}</div>\\n            </ng-template>\\n        </p-multiSelect>\\n        <p>Selected Cars: {{selectedMeeting.attendees}}</p>-->\\n    </div>\\n    <h5>Files available:</h5>\\n    <!-- <div *ngFor=\\\"let file of selectedMeeting.downloadFiles | keyvalue ;index as i\\\">\\n    {{i+1}}.{{file.key}}: Click <a href=\\\"#\\\" (click)=open(file.value)>here</a> to view\\n    <i (click)=deleteFile(file.key,i) class=\\\"far fa-times-circle\\\"></i>\\n    </div> -->\\n    <div *ngFor=\\\"let file of selectedMeeting.downloadFiles ;index as i\\\">\\n        {{i+1}}.{{file.uniqueNameForReference}}: Click <a style=\\\"color:#0000FF;\\\" (click)=open(file.linkToView)>here</a> to view\\n        <i *ngIf=\\\"loggedInUserDataFromDB.Role=='Chair'\\\" (click)=deleteFile(file.uniqueNameForReference,i) class=\\\"far fa-times-circle\\\"></i>\\n        <i class=\\\"fas fa-file-download ml-3\\\" (click)=downloadFile(file.uniqueNameForReference,file.linkToView,file.typeOfFile)></i>\\n        </div>\\n    <input *ngIf=\\\"loggedInUserDataFromDB.Role=='Chair'\\\" type=\\\"file\\\" (change)=\\\"uploadFile($event)\\\" accept=\\\".txt,.pdf,.doc,.docx\\\">\\n</div>\\n\\n<p-confirmDialog header=\\\"Confirmation\\\" icon=\\\"pi pi-exclamation-triangle\\\"></p-confirmDialog>\\n\\n</div>\\n<div *ngIf=\\\"loggedInUserDataFromDB!=null && loggedInUserDataFromDB.Role=='Admin'\\\">\\n    <h4 style=\\\"color: red;\\\" class=\\\"px-4\\\">*You do not have access</h4>\\n  </div>\\n<div *ngIf=\\\"loggedInUserDataFromDB!=null && (loggedInUserDataFromDB.Role=='Chair' || loggedInUserDataFromDB.Role=='Faculty') && selectedMeeting==null\\\">\\n    <h4 style=\\\"color: red;\\\" class=\\\"px-4\\\">*No meeting is selected</h4>\\n</div>\\n\\n\\n\"","export default \"<div class='ml-4' *ngIf=\\\"loggedInUserDataFromDB!=null\\\">\\n<h1 style=\\\"text-align: center; font-family: cursive;\\\" *ngIf=\\\"loggedInUserDataFromDB.Role=='Admin' || loggedInUserDataFromDB.Role=='Faculty' || loggedInUserDataFromDB.Role=='Chair' || loggedInUserDataFromDB.Role=='Admission'\\\">Welcome to UHCL-CSE Portal</h1>\\n<h6 style=\\\"color: red; text-align: center; font-style: italic;\\\" *ngIf=\\\"loggedInUserDataFromDB.Role!='Admin' && loggedInUserDataFromDB.Role!='Faculty' && loggedInUserDataFromDB.Role!='Chair' && loggedInUserDataFromDB.Role!='Admission'\\\"> *You are an Unauthorized user please logout of the application</h6>\\n</div>\"","export default \"<div [hidden]=\\\"loggedInUserDataFromDB==null\\\">\\n  <div [hidden]=\\\"loggedInUserDataFromDB.Role!='Chair' && loggedInUserDataFromDB.Role!='Faculty'\\\">\\n<button *ngIf=\\\"loggedInUserDataFromDB.Role=='Chair'\\\"type=\\\"button\\\" class=\\\"btn btn-primary float-right\\\" (click)=\\\"createMeeting()\\\">Create Meeting</button>\\n\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"container\\\">\\n  <mat-form-field class=\\\"StyleForSearch\\\">\\n    <mat-label >Search</mat-label>\\n    <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"Ex. Subject\\\">\\n  </mat-form-field>\\n</div>\\n    <table mat-table [dataSource]=\\\"meetings\\\" matSort class=\\\"datatable mat-elevation-z8 pointer\\\">\\n  \\n      <!--- Note that these columns can be defined in any order.\\n            The actual rendered columns are set as a property on the row definition\\\" -->\\n    \\n    \\n    \\n      <!-- Name Column -->\\n      <ng-container matColumnDef=\\\"Subject\\\">\\n        <th class=\\\"text-center\\\" mat-header-cell *matHeaderCellDef mat-sort-header> Subject </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.subject}} </td>\\n      </ng-container>\\n    \\n      <!-- Weight Column -->\\n      <ng-container matColumnDef=\\\"Date\\\">\\n        <th class=\\\"text-center\\\" mat-header-cell *matHeaderCellDef mat-sort-header> Date </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.date}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"Time\\\">\\n        <th class=\\\"text-center\\\" mat-header-cell *matHeaderCellDef mat-sort-header> Time </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.time}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"Duration\\\">\\n        <th class=\\\"text-center\\\" mat-header-cell *matHeaderCellDef mat-sort-header> Duration(in minutes) </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.duration}} </td>\\n      </ng-container>\\n    \\n      <!-- Symbol Column -->\\n      <ng-container matColumnDef=\\\"Department\\\">\\n        <th class=\\\"text-center\\\" mat-header-cell *matHeaderCellDef mat-sort-header> programs </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.department}} </td>\\n      </ng-container>\\n  \\n      <ng-container matColumnDef=\\\"facilitatedBy\\\">\\n          <th class=\\\"text-center\\\" mat-header-cell *matHeaderCellDef mat-sort-header> Facilitated by </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.facilitatedBy}} </td>\\n        </ng-container>\\n  \\n        <ng-container matColumnDef=\\\"AgendaList\\\">\\n          <th class=\\\"text-center\\\" mat-header-cell *matHeaderCellDef mat-sort-header> Agenda List </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> <a class=\\\"badge badge-primary\\\" type=\\\"text\\\" label=\\\"Basic\\\" (mouseover)=\\\"agendaList = element.agendaList;op.toggle($event)\\\" (mouseout)=\\\"op.toggle($event)\\\">Hover Here</a>\\n           <!--<h6 *ngFor=\\\"let item of element.agendaList;index as i\\\">{{i+1}}.{{item}}</h6></td>-->\\n        </ng-container>\\n    \\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"getMeeting(row)\\\"></tr>\\n    </table> \\n  </div>\\n  <!--<h6 *ngFor=\\\"let item of element.agendaList\\\">{{item.id}}.{{item.agenda}} </h6>-->\\n  <p-overlayPanel #op>\\n    <h6 *ngFor=\\\"let item of agendaList;index as i\\\">{{i+1}}.{{item}}</h6>\\n</p-overlayPanel>\\n</div>\\n\\n<div *ngIf=\\\"loggedInUserDataFromDB.Role=='Admin' || loggedInUserDataFromDB.Role=='Admission'\\\">\\n  <h4 style=\\\"color: red;\\\" class=\\\"px-4\\\">*You do not have access</h4>\\n</div>\\n</div>\"","export default \"\\n<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\"> \\n    \\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n  \\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li style=\\\"font-family: cursive;\\\" class=\\\"nav-item \\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <div  *ngIf=\\\"loggedInUserDataFromDB!=null\\\">\\n        <li style=\\\"font-family: cursive;\\\" *ngIf=\\\"loggedInUserDataFromDB.Role=='Admin' \\\" class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/Users\\\">Users</a>\\n        </li>\\n      </div>\\n      <div  *ngIf=\\\"loggedInUserDataFromDB!=null\\\">\\n        <li style=\\\"font-family: cursive;\\\" *ngIf=\\\"loggedInUserDataFromDB.Role=='Faculty' || loggedInUserDataFromDB.Role=='Chair'\\\" class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/MeetingsList\\\">Meetings</a>\\n        </li>\\n      </div>\\n      <div  *ngIf=\\\"loggedInUserDataFromDB!=null\\\">\\n        <li style=\\\"font-family: cursive;\\\" *ngIf=\\\"loggedInUserDataFromDB.Role=='Admission' || loggedInUserDataFromDB.admissionApplicationReviewer==true\\\" class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/Admissions\\\">Admissions</a>\\n        </li>\\n      </div>\\n      </ul>\\n      <form class=\\\"form-inline my-2 my-lg-0\\\">\\n        <div  *ngIf=\\\"loggedInUserDataFromDB!=null\\\">\\n        <h6 style=\\\"font-family: cursive; font-weight: bold;\\\">{{loggedInUserDataFromDB.firstName}} {{loggedInUserDataFromDB.lastName}}: {{loggedInUserDataFromDB.Role}} </h6>\\n      </div>\\n        <button (click)=logout() class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=\\\"submit\\\">logout</button>\\n      </form>\\n    </div>\\n  </nav>\\n\"","export default \"<h5>*Unauthorized to view this page</h5>\\n<h5>*Unauthorized to view this page</h5>\\n<h5>*Unauthorized to view this page</h5>\\n<h5>*Unauthorized to view this page</h5>\"","export default \"<div [ngClass]='loggedInUserDataFromDB!=null ? \\\"visible\\\": \\\"hidden\\\" '>\\n<div [hidden]=\\\"loggedInUserDataFromDB.Role!='Admin'\\\">\\n<button type=\\\"button\\\" class=\\\"btn btn-primary float-right\\\" (click)=\\\"addUser()\\\">Add user</button>\\n\\n<!--<div class=\\\"card\\\" style=\\\"width: 38rem;\\\" *ngFor=\\\"let user of users\\\">\\n    <ul class=\\\"list-group list-group-flush\\\">\\n      <li class=\\\"list-group-item\\\">{{user.firstName}} {{user.lastName}} {{user.department}} {{user.Role}}\\n       <! <popup>\\\"Are you sure?</popup>->\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary float-right\\\" (click)=\\\"deleteUser(user)\\\">Delete user</button>\\n        <button class=\\\"btn float-right\\\" (click)=\\\"editButtonClicked(user)\\\">Edit</button>\\n      </li> \\n    </ul>\\n  </div>-->\\n<div [hidden]=\\\"showAddUserForm\\\" class=\\\"container-fluid\\\">\\n  <div class=\\\"container\\\">\\n    <mat-form-field class=\\\"StyleForSearch\\\">\\n      <mat-label>Search</mat-label>\\n      <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"Ex. First name\\\">\\n    </mat-form-field>\\n  </div>\\n\\n  <table mat-table [dataSource]=\\\"users\\\" matSort class=\\\"datatable mat-elevation-z8\\\">\\n\\n    <!--- Note that these columns can be defined in any order.\\n          The actual rendered columns are set as a property on the row definition\\\" -->\\n\\n    <!-- Position Column -->\\n    <ng-container matColumnDef=\\\"Action\\\">\\n      <th mat-header-cell *matHeaderCellDef > Action </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> <i class=\\\" m-2 fas fa-user-edit\\\" (click)=\\\"editButtonClicked(element)\\\"></i>\\n        <i class=\\\"m-2 far fa-trash-alt\\\" (click)=\\\"deleteUser(element)\\\"></i></td>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"firstName\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> First Name </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.firstName}} </td>\\n    </ng-container>\\n\\n    <!-- Weight Column -->\\n    <ng-container matColumnDef=\\\"lastName\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Last Name </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.lastName}} </td>\\n    </ng-container>\\n\\n    <!-- Symbol Column -->\\n    <ng-container matColumnDef=\\\"Role\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Role </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Role}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"emailId\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Email Id </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.emailId}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"department\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Program </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.department}} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n</div>\\n\\n\\n<!--Create User Form-->\\n<div class=\\\"m-5 card\\\">\\n  <form class=\\\"m-5\\\" *ngIf=\\\"showAddUserForm\\\" #userForm=\\\"ngForm\\\">\\n    <div class=\\\"input-group\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n        <span class=\\\"input-group-text\\\" id=\\\"\\\">First and last name</span>\\n      </div>\\n      <input required #firstName=\\\"ngModel\\\" [(ngModel)]=\\\"addUserObject.firstName\\\" name=\\\"firstName\\\" type=\\\"text\\\"\\n        class=\\\"form-control\\\">\\n      <input required #lastName=\\\"ngModel\\\" [(ngModel)]=\\\"addUserObject.lastName\\\" name=\\\"lastName\\\" type=\\\"text\\\"\\n        class=\\\"form-control\\\">\\n    </div>\\n    <div class=\\\"alert alert-danger\\\"\\n      *ngIf=\\\"(firstName.touched && !firstName.valid)||(lastName.touched && !lastName.valid)\\\">*First and last names are\\n      required</div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"exampleFormControlInput1\\\">Email address</label>\\n      <input required #email=\\\"ngModel\\\" [(ngModel)]=\\\"addUserObject.email\\\" name=\\\"email\\\" type=\\\"email\\\" class=\\\"form-control\\\"\\n        id=\\\"exampleFormControlInput1\\\" placeholder=\\\"name@example.com\\\">\\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"(email.touched && !email.valid)\\\">*Email Id is required</div>\\n     <!-- <div *ngFor=\\\"let emailIterator of usersEmailIdsForValidation\\\">\\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"emailIterator==addUserObject.email\\\">*Email id is already taken</div>\\n    </div>-->\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"email.touched && usersEmailIdsForValidation.includes(addUserObject.email)\\\">*Email id is already taken</div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"exampleFormControlSelect1\\\">Role</label>\\n      <select required #role=\\\"ngModel\\\" [(ngModel)]=\\\"addUserObject.role\\\" name=\\\"role\\\" class=\\\"form-control\\\"\\n        id=\\\"exampleFormControlSelect1\\\">\\n        <option *ngFor=\\\"let role of roles\\\">{{role}}</option>\\n      </select>\\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"(role.touched && !role.valid)\\\">*Role is required</div>\\n    </div>\\n    <div class=\\\"form-group form-check\\\">\\n      <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"exampleCheck1\\\" [(ngModel)]=\\\"addUserObject.admissionApplicationReviewer\\\" name=\\\"admissionApplicationReviewer\\\">\\n      <label class=\\\"form-check-label\\\" for=\\\"exampleCheck1\\\">Check if User is a Admission Application Reviewer</label>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"exampleFormControlSelect1\\\">Department</label>\\n      <select required #department=\\\"ngModel\\\" [(ngModel)]=\\\"addUserObject.department\\\" name=\\\"department\\\"\\n        class=\\\"form-control\\\" id=\\\"exampleFormControlSelect1\\\">\\n        <option *ngFor=\\\"let department of departments\\\">{{department}}</option>\\n      </select>\\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"(department.touched && !department.valid)\\\">*Department is required</div>\\n    </div>\\n    <button [disabled]=\\\"!firstName.valid || !lastName.valid || !email.valid || !role.valid || !department.valid || (email.touched && usersEmailIdsForValidation.includes(addUserObject.email))\\\" *ngIf=\\\"showAddUserForm\\\" class=\\\"btn btn-primary\\\" (click)=\\\"submitToSaveUser()\\\">Save</button>\\n    <button *ngIf=\\\"showAddUserForm\\\" class=\\\"btn\\\" (click)=\\\"cancel()\\\">cancel</button>\\n  </form>\\n  <p-confirmDialog header=\\\"Confirmation\\\" icon=\\\"pi pi-exclamation-triangle\\\"></p-confirmDialog>\\n</div>\\n</div>\\n\\n<!--Throwing Error Message if user hardcode's link in the google url tab-->\\n<div *ngIf=\\\"loggedInUserDataFromDB.Role=='Faculty' || loggedInUserDataFromDB.Role=='Chair'\\\">\\n  <h4 style=\\\"color: red;\\\" class=\\\"px-4\\\">*You do not have access</h4>\\n</div>\\n</div>\\n<!--\\n      [disabled]=\\\"firstName.valid||lastName.valid||email.valid||role.valid||department.valid\\\"\\n    Update user form\\n  <form *ngIf=\\\"showUpdateUserForm\\\">\\n    <div class=\\\"input-group\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <span class=\\\"input-group-text\\\" id=\\\"\\\">First and last name</span>\\n        </div>\\n        <input [(ngModel)]=\\\"updateUserObject.firstName\\\" name= \\\"firstName\\\"type=\\\"text\\\" class=\\\"form-control\\\">\\n        <input [(ngModel)]=\\\"updateUserObject.lastName\\\" name= \\\"lastName\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n      </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"exampleFormControlInput1\\\">Email address</label>\\n      <input [(ngModel)] =\\\"updateUserObject.email\\\" name= \\\"email\\\" type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"exampleFormControlInput1\\\" placeholder=\\\"name@example.com\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"exampleFormControlSelect1\\\">Role</label>\\n      <select [(ngModel)]=\\\"updateUserObject.role\\\" name= \\\"role\\\"class=\\\"form-control\\\" id=\\\"exampleFormControlSelect1\\\">\\n        <option>Chair</option>\\n        <option>Faculty</option>\\n        <option>Admin</option>\\n      </select>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleFormControlSelect1\\\">Department</label>\\n        <select [(ngModel)]=\\\"updateUserObject.department\\\" name= \\\"department\\\"class=\\\"form-control\\\" id=\\\"exampleFormControlSelect1\\\">\\n          <option>CS</option>\\n          <option>CIS</option>\\n          <option>IT</option>\\n          <option>DS</option>\\n        </select>\\n      </div>\\n  </form>\\n  <button *ngIf=\\\"showUpdateUserForm\\\" class=\\\"btn btn-primary\\\"(click)=\\\"updateButtonClicked()\\\">Update</button>\\n-->\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export class AdmissionsModel{\n    studentId:string;\n    firstName:string;\n    lastName:string;\n    greVerbalScore:number;\n    greQuantScore:number;\n    greTotalScore:number;\n    greEssayScore:number;\n    gpa:number;\n    intendedProgram:string;\n    date:string;\n    intendedValidators=[];\n    downloadApplications=[];\n    accepts=[];\n    rejects=[];\n    comments=[];\n    rejectionReasonsFromModel={};\n    constructor(){\n       \n\n    }\n}","export class CreateMeetingModel{\n    subject:string;\n    date: string;\n    formateddate:string;\n    facilitatedBy:string;\n    agendaList:string;\n    department:string;\n    HH:string;\n    MM:string;\n    noon:string;\n    time:string;\n    duration:String;\n    departmentList:string[] = [];\n    meetingMinutes:string;\n    documentIdOfAgendaListCollection:string;\n    inlineCheckbox1:boolean;\n    inlineCheckbox2:boolean;\n    inlineCheckbox3:boolean;\n    inlineCheckbox4:boolean;\n    inlineCheckbox5:boolean;\n    approvals:any[];\n    rejects:any[];\n    comments:any=[];\n    documentIdOfCurrentMeeting:string;\n    finalised:boolean;\n    files:string[];\n    operation:string;\n    attendees:string[]=[];\n    saveMeetingMinutesAndSendEmail:boolean;\n  //downloadFiles:any;\n  downloadFiles: any[] = [\n    {\n      uniqueNameForReference: \"\",\n      linkToView: \"\",\n      typeOfFile:\"\"\n    }\n  ];\n    constructor(){\n       \n\n    }\n\n}","export class User{\n    email:string;\n    role: string;\n    firstName:string;\n    lastName:string;\n    fullName:string;\n    id:number;\n    department:string;\n    admissionApplicationReviewer:boolean=false;\n    constructor(){\n       \n\n    }\n}","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdmissionsService {\n  selectedStudent:any;\n  selectedStudentSubject:BehaviorSubject<any>=new BehaviorSubject(null);\n  constructor() { }\n  setDataFromAdmissionsList(selectedStudent){\n    this.selectedStudent = selectedStudent;\n//opening and putting data\n//console.log(this.selectedMeeting);\nthis.selectedStudentSubject.next(this.selectedStudent);\n\n  }\n  getSelectedStudentObj(){\n    //broadcasting where ever opening is find.\n         return this.selectedStudentSubject.asObservable();\n      }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorizationServiceService {\n  loggedInUser:any=null;\n  loggedInUserSubject:BehaviorSubject<any>=new BehaviorSubject(null);\n  constructor() { }\n  setUserFromAppComponent(loggedInUser){\n    this.loggedInUser=loggedInUser;\n    //console.log(\"from Auth service\",this.loggedInUser);\n    this.loggedInUserSubject.next(this.loggedInUser);\n  }\n  getUserFromAuthorizationServiceObj(){\n    return this.loggedInUserSubject.asObservable();\n  }\n}\n","import { saveAs } from 'file-saver';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileService {\n\n  constructor(private http:HttpClient) { }\n  setHttpRequestToDownloadFile(uniqueNameForReference,linkToView,typeOfFile){\n    console.log(typeOfFile);\n    this.http.get(linkToView,{responseType: 'blob' })\n   .subscribe(data => {\n    const blob = new Blob([data], { type: typeOfFile })\n    saveAs(blob,uniqueNameForReference);\n\n  });\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MeetingService {\nselectedMeeting:any;\nselectedMeetingSubject:BehaviorSubject<any>=new BehaviorSubject(null);\nselectedMeetingSubjectForEditingMeeting:BehaviorSubject<any>=new BehaviorSubject(null);\n//this is something like a pipe.\n  constructor() { }\n  setDataFromMeetingList(selectedMeeting){\nthis.selectedMeeting = selectedMeeting;\n//opening and putting data\n//console.log(this.selectedMeeting);\nthis.selectedMeetingSubject.next(this.selectedMeeting);\nthis.selectedMeetingSubjectForEditingMeeting.next(this.selectedMeeting);\n  }\n  getSelectedMeetingObj(){\n//broadcasting where ever opening is find.\n     return this.selectedMeetingSubject.asObservable();\n  }\n  getSelectedMeetingObjForEditingMeeting(){\n    return this.selectedMeetingSubjectForEditingMeeting.asObservable();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZC1tZWV0aW5nLW1pbnV0ZXMvYWRkLW1lZXRpbmctbWludXRlcy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { CreateMeetingModel } from '../Models/CreateMeetingModel';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Router } from '@angular/router';\nimport { MeetingService } from '../Services/meeting.service';\n@Component({\n  selector: 'app-add-meeting-minutes',\n  templateUrl: './add-meeting-minutes.component.html',\n  styleUrls: ['./add-meeting-minutes.component.css']\n})\nexport class AddMeetingMinutesComponent implements OnInit {\ncreateMeetingModelObject=new CreateMeetingModel();\nselectedMeeting:CreateMeetingModel;\n  agendaList: any;\n  constructor(private db:AngularFirestore, private route:Router,private meetingService:MeetingService) { }\n\n  ngOnInit() {\n    this.meetingService.getSelectedMeetingObj().subscribe(data => {\n      this.selectedMeeting = data;\n      console.log(this.selectedMeeting);\n     });\n  }\n  saveMeetingMinutes(){\n    //this.db.collection(\"AgendaList\").doc(this.selectedMeeting.documentIdOfAgendaListCollection).update({whmeetingMinutes:this.createMeetingModelObject.meetingMinutes}).then(error => console.log(error));\n    \n    this.route.navigate(['DetailedMeeting']);\n  }\n  cancelInputingMeetingMinutes(){\n    this.route.navigate(['DetailedMeeting']);\n  }\n\n\n}\n","export default \".datatable{\\n    width:100%;\\n}\\n.StyleForSearch{\\n    width:100%;\\n}\\nth.mat-sort-header-sorted {\\n    color: black;\\n  }\\n.styleRedBackGround{\\n      background-color: #ffcccb;\\n      \\n  }\\n.styleGreenBackGround{\\n      background-color: lightgreen;\\n  }\\n.styleBrownBackGround{\\n      background-color: #fed8b1;\\n  }\\n.styleWhiteBackGround{\\n      background-color: white;\\n  }\\n.pointer {\\n    cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaXNzaW9ucy9hZG1pc3Npb25zLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2Q7QUFDQTtJQUNJLFVBQVU7QUFDZDtBQUNBO0lBQ0ksWUFBWTtFQUNkO0FBQ0E7TUFDSSx5QkFBeUI7O0VBRTdCO0FBQ0E7TUFDSSw0QkFBNEI7RUFDaEM7QUFDQTtNQUNJLHlCQUF5QjtFQUM3QjtBQUNBO01BQ0ksdUJBQXVCO0VBQzNCO0FBQ0E7SUFDRSxlQUFlO0FBQ25CIiwiZmlsZSI6InNyYy9hcHAvYWRtaXNzaW9ucy9hZG1pc3Npb25zLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGF0YXRhYmxle1xuICAgIHdpZHRoOjEwMCU7XG59XG4uU3R5bGVGb3JTZWFyY2h7XG4gICAgd2lkdGg6MTAwJTtcbn1cbnRoLm1hdC1zb3J0LWhlYWRlci1zb3J0ZWQge1xuICAgIGNvbG9yOiBibGFjaztcbiAgfVxuICAuc3R5bGVSZWRCYWNrR3JvdW5ke1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmY2NjYjtcbiAgICAgIFxuICB9XG4gIC5zdHlsZUdyZWVuQmFja0dyb3VuZHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JlZW47XG4gIH1cbiAgLnN0eWxlQnJvd25CYWNrR3JvdW5ke1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZlZDhiMTtcbiAgfVxuICAuc3R5bGVXaGl0ZUJhY2tHcm91bmR7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgfVxuICAucG9pbnRlciB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufSJdfQ== */\"","import { AngularFireStorage } from '@angular/fire/storage';\nimport { element } from 'protractor';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Component, OnInit,ViewChild } from '@angular/core';\nimport { AdmissionsModel } from '../Models/AdmissionsModel';\nimport { AuthorizationServiceService } from '../Services/authorization-service.service';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatSort} from '@angular/material/sort';\nimport {ConfirmationService} from 'primeng/api';\nimport { FileService } from '../Services/file.service';\nimport { AdmissionsService } from '../Services/admissions.service';\nimport { Router } from '@angular/router';\nimport { DatePipe } from '@angular/common';\n@Component({\n  selector: 'app-admissions',\n  templateUrl: './admissions.component.html',\n  styleUrls: ['./admissions.component.css']\n})\nexport class AdmissionsComponent implements OnInit {\nadmissionsModelObject=new AdmissionsModel();\nshowAddStudentApplicationForm:boolean;\ngreVerbalPossibleScore=[];\ngreTotalPossibleScore=[];\ngreEssayPossibleScore=[];\n  loggedInUserDataFromDB: any={};\n  studentIdsForValidation=[];\n  applicants: MatTableDataSource<any>;\n  \n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  displayedColumns: string[] = ['Action','studentId','firstName', 'lastName', 'greVerbalScore','greQuantScore','greTotalScore','greEssayScore','intendedProgram','gpa','status','date'];\n  editClicked: boolean;\n  tempStudent: any;\n  constructor(private db: AngularFirestore,private authorizationService: AuthorizationServiceService,private storage: AngularFireStorage,private confirmationService: ConfirmationService,private fileService:FileService, private admissionsService:AdmissionsService, private route:Router,private datePipe: DatePipe) {\n    this.showAddStudentApplicationForm=false;\n    for(let i=130; i<171;i++){\n      this.greVerbalPossibleScore.push(i);\n      this.greTotalPossibleScore.push(i+130);\n    }\n    for(let j=0;j<6.5;j=j+0.5){\n      this.greEssayPossibleScore.push(j);\n    }\n    this.authorizationService.getUserFromAuthorizationServiceObj().subscribe(data => {\n      if(data!=null){\n      this.loggedInUserDataFromDB = data;\n    }\n      //console.log(\"in nav bar\",this.loggedInUserDataFromDB);\n      \n    });\n    this.db.collection(\"Admissions\").valueChanges().subscribe(snap=>{\n      //snap=snap.orderBy(\"date\");\n      this.applicants=new MatTableDataSource(snap);\n      this.applicants.sort = this.sort;\n      for(let i=0;i<snap.length;i++){\n        this.studentIdsForValidation.push(snap[i]['studentId']);\n      }\n      \n    });\n    \n   }\n  addStudentApplication(){\n    this.showAddStudentApplicationForm=true;\n  }\n  uploadFile(event){\n    console.log(event.target.files[0]);\n    var timeStamp = Math.floor(Date.now() / 1000).toString(20);\n    var randomId = Math.random().toString(36).substring(2);\n    randomId = randomId + timeStamp;\n    // randomId=randomId+\n    this.storage.upload(randomId, event.target.files[0]).snapshotChanges().subscribe(data => {\n      //console.log(\"console.log\",data);\n      this.storage.ref(randomId).getDownloadURL().subscribe(data=>{\n        if(data!=null){\n          let downloadUrl = data;\n          //this.selectedMeeting.downloadFiles[randomId]=downloadUrl;\n          //console.log(this.selectedMeeting.downloadFiles);\n          this.admissionsModelObject.downloadApplications.push({\n            uniqueNameForReference:randomId,\n            linkToView:downloadUrl,\n            nameOfFileAsUploaded:event.target.files[0].name,\n            typeOfFile:event.target.files[0].type\n          })\n        }\n      });\n    });\n\n  }\n  open(url){\n    window.open(url,\"_blank\");\n  }\n  deleteFile(ref1,i){\n    this.confirmationService.confirm({\n      message: 'Are you sure, do you want to delete this File?',\n      header:ref1,\n      accept: () => {\n    //console.log(ref1,i);\n    var deleteRef = this.storage.ref(ref1)\n\n    // Delete the file\n    deleteRef.delete()\n    //this.selectedMeeting.downloadFiles.\n    //const index: number = this.selectedMeeting.downloadFiles.indexOf(ref1);\n     if (i !== -1) {\n     this.admissionsModelObject.downloadApplications.splice(i, 1);\n     \n     }\n    //this.db.collection(\"Meetings\").doc(this.selectedMeeting.documentIdOfCurrentMeeting).update({ downloadFiles: this.selectedMeeting.downloadFiles });\n  }\n});\n\n  }\n  downloadFile(uniqueNameForReference,linkToView,typeOfFile){\n    this.fileService.setHttpRequestToDownloadFile(uniqueNameForReference,linkToView,typeOfFile); \n     }\n  saveAdmissionApplication(){\n    //console.log(typeof(this.admissionsModelObject.studentId));\n    this.admissionsModelObject.greTotalScore=+(this.admissionsModelObject.greVerbalScore) + +(this.admissionsModelObject.greQuantScore);\n    var MMddyyyy = this.datePipe.transform(new Date(),\"MM-dd-yyyy\");\n    console.log(MMddyyyy);\n    this.db.collection('Admissions').doc(`${this.admissionsModelObject.studentId}`).set({\n      date:MMddyyyy,\n      firstName:this.admissionsModelObject.firstName,\n      lastName:this.admissionsModelObject.lastName,\n      studentId:this.admissionsModelObject.studentId,\n      greVerbalScore:this.admissionsModelObject.greVerbalScore,\n      greQuantScore:this.admissionsModelObject.greQuantScore,\n      greTotalScore:`${this.admissionsModelObject.greTotalScore}`,\n      greEssayScore:this.admissionsModelObject.greEssayScore,\n      intendedProgram:this.admissionsModelObject.intendedProgram,\n      gpa:this.admissionsModelObject.gpa,\n      //intendedValidators:this.admissionsModelObject.intendedValidators,\n      uploadedBy:this.loggedInUserDataFromDB.emailId,\n      accepts:this.admissionsModelObject.accepts,\n      rejects:this.admissionsModelObject.rejects,\n      comments:[],\n      status:\"Sent for Review\",\n      rejectionReasonsFromModel:{},\n      downloadApplications:this.admissionsModelObject.downloadApplications\n    })\n\n    this.showAddStudentApplicationForm=false;\n    this.admissionsModelObject=new AdmissionsModel();\n  }\n  cancel(){\n    this.showAddStudentApplicationForm=false;\n    this.admissionsModelObject=new AdmissionsModel();\n  }\n  editButtonClicked(element){\n    this.editClicked=true;\n    this.tempStudent=element;\n    this.admissionsModelObject=element;\n    //this.admissionsModelObject.intendedValidators.setValue(element.intendedValidators);\n    this.showAddStudentApplicationForm=true;\n\n  }\n  deleteApplication(element){\n    this.confirmationService.confirm({\n      message: 'Are you sure, do you want to delete this Student Application?',\n      header:`${element.studentId}`,\n      accept: () => { \n    this.db.collection('Admissions').doc(`${element.studentId}`).delete()\n    .then(function(){\n      console.log(\"Document Successfull deleted!\");\n    }).catch(\n      function(error){\n        console.error(\"Error removing document:\",error);\n      }\n    );\n  }\n});\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.applicants.filter = filterValue.trim().toLowerCase();\n  }\n  getPresentStudentDetails(presentStudent){\n    this.admissionsService.setDataFromAdmissionsList(presentStudent)\n    this.route.navigate(['DetailedAdmission']);\n  }\n  ngOnInit() {\n    //this.applicants.sort = this.sort;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { AngularFireDatabase,AngularFireObject, AngularFireList } from 'angularfire2/database';\nimport { Component, OnInit } from '@angular/core';\nimport {AngularFirestore} from '@angular/fire/firestore';\nimport { AngularFireAuth } from \"@angular/fire/auth\";\nimport * as firebase from 'firebase';\nimport { BroadcastService, MsalService } from '@azure/msal-angular';\nimport { AuthorizationServiceService } from './Services/authorization-service.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  //courses:AngularFireList<any>;\n  //var provider = new firebase.auth.OAuthProvider('microsoft.com');\n  provider:any;\n  user:any=null;\n  userEmailThroughWhichHeIsLoggedIn:string=null;\n  title = 'UHCL_CSE_PORTAL';\n  userDetailsFromDb:any=null\n  // firebase.auth().getRedirectResult()\n  // .then(function(result) {\n  //   // User is signed in.\n  //   console.log(result.additionalUserInfo.profile)\n  //   // OAuth access token can also be retrieved:\n  //   // result.credential.accessToken\n  //   // OAuth ID token can also be retrieved:\n  //   // result.credential.idToken\n  // })\n  // .catch(function(error) {\n  //   // Handle error.\n  // });\n  constructor(private auth:AngularFireAuth,private msService:BroadcastService,private authservice:MsalService, private db: AngularFirestore, private authorizationService:AuthorizationServiceService){\n    //console.log(this.authservice.getUser());\n    //console.log(this.authservice.getAllUsers());\n    this.msService.subscribe(\"msal:loginSuccess\", (payload) => {\n      //console.log(payload);\n      // do something here\n      });\n      this.msService.subscribe(\"msal:loginFailure\", (payload) => {\n        //console.log(payload);\n        // do something here\n        });\n        this.msService.getMSALSubject().subscribe(data =>console.log(data));\n//     this.provider = new firebase.auth.OAuthProvider('microsoft.com')\n//     this.provider.addScope('profile');\n// this.provider.addScope('email');\n//this.auth.auth.signInWithRedirect(this.provider).then(val => console.log(\"redrirect val\",val));\n\n    //firebase.auth.OAuthCredential.\n    //console.log(this.provider.accessToken);\n    //this.auth.idTokenResult.subscribe(data => console.log(data));\n    //console.log(this.auth.idTokenResult)\n    //this.auth.authState.subscribe(data =>console.log(\"auth state\",data));\n    // if(this.provider.isAuthProvider==false){\n    //this.auth.user.subscribe(data =>console.log(data));\n    // this.auth1.auth.signInWithPopup(this.provider).then(val => console.log(val));\n     //this.auth.auth.signInWithRedirect(this.provider).then(val => console.log(\"redrirect val\",val));\n    // }\n    // firebase.auth().getRedirectResult().then(function(result) {\n    //   if (result.credential) {\n    //     // This gives you the OAuth Access Token for that provider.\n    //     var token = result.credential['accessToken'];\n    //     console.log(token);\n    //   }\n    //   var user = result.user;\n    //   console.log(result);\n    // });\n  }\n  ngOnInit(){\n    \n   this.getUser();\n  }\n  getUser(){\n    this.user = this.authservice.getUser();\n    this.userEmailThroughWhichHeIsLoggedIn=this.user.idToken.preferred_username;\n    //console.log(\"app module\",this.userEmailThroughWhichHeIsLoggedIn);\n    this.db.collection(\"Users\").doc(this.userEmailThroughWhichHeIsLoggedIn).get().subscribe(doc=>{this.authorizationService.setUserFromAppComponent(doc.data())});\n    \n  }\n}\n","import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HomeComponentComponent } from './home-component/home-component.component';\nimport { environment } from './../environments/environment';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport {DatePipe} from '@angular/common';\nimport { AppComponent } from './app.component';\n//import below for login using microsoft\nimport { AngularFireAuthModule } from \"@angular/fire/auth\";\nimport {AngularFireStorageModule} from '@angular/fire/storage';\n//import below for routing\nimport { RouterModule } from '@angular/router';\n//Import below for forms working\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms'\n//Import this below lines to use fireDb related things\nimport {AngularFireModule} from 'angularfire2';\nimport {AngularFireDatabaseModule, AngularFireDatabase} from 'angularfire2/database'\nimport {AngularFirestoreModule} from '@angular/fire/firestore';\n//Imported for components\nimport { UserListComponent } from './user-list/user-list.component';\nimport { NavigationBarComponent } from './navigation-bar/navigation-bar.component';\n//import this for getting popup modules\n//import {PopupModule} from 'ng2-opd-popup';\n//import below for Table Api\nimport {MatTableModule} from '@angular/material/table';\n//import for sorting\nimport {MatSortModule} from '@angular/material/sort';\n//Import for angular material datepicker API\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatNativeDateModule} from '@angular/material';\n//import for multiselect\nimport {MatSelectModule} from '@angular/material/select';\n//import {MatMomentDateModule} from '@angular/material-moment-adapter';\n//import for mat-label API\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material';\n//importing prime ng\nimport {OverlayPanelModule} from 'primeng/overlaypanel';\nimport {ConfirmDialogModule} from 'primeng/confirmdialog';\nimport {ConfirmationService} from 'primeng/api';\nimport {MultiSelectModule} from 'primeng/multiselect';\n//import for browswe animations module\n//omporting http module\nimport { HttpClientModule } from '@angular/common/http';\nimport { CreateMeetingComponent } from './create-meeting/create-meeting.component';\nimport { MeetingsListComponent } from './meetings-list/meetings-list.component';\nimport { DetailedMeetingComponent } from './detailed-meeting/detailed-meeting.component';\nimport { MeetingService } from './Services/meeting.service';\nimport { AddMeetingMinutesComponent } from './add-meeting-minutes/add-meeting-minutes.component';\nimport {MsalModule, MsalGuard} from '@azure/msal-angular';\nimport { FileService } from './Services/file.service';\nimport { NoaccessComponent } from './noaccess/noaccess.component';\nimport { AdmissionsComponent } from './admissions/admissions.component';\nimport { DetailedAdmissionComponent } from './detailed-admission/detailed-admission.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserListComponent,\n    NavigationBarComponent,\n    HomeComponentComponent,\n    CreateMeetingComponent,\n    MeetingsListComponent,\n    DetailedMeetingComponent,\n    AddMeetingMinutesComponent,\n    NoaccessComponent,\n    AdmissionsComponent,\n    DetailedAdmissionComponent\n  ],\n  imports: [\n    \n\n    BrowserModule,\n    AppRoutingModule,\n\n    //import below for popup window\n    //PopupModule.forRoot(),\n    //import below for working with forms\n    FormsModule,\n    ReactiveFormsModule,\n    //Use the below lines for using firedb\n    AngularFireModule.initializeApp(environment.fireBase),//Basic module. \n    /*If we want Angular fire authentication, angualr fire database \n     and all we need some other modules*/\n    AngularFireDatabaseModule,\n    AngularFirestoreModule,\n    AngularFireStorageModule,\n    //import for angular tables\n    MatTableModule,\n    \n    //import for sorting\n    MatSortModule,\n    //Import for angular material datepicker\n    MatDatepickerModule,\n    MatNativeDateModule,\n    //Import below for working with routing\n    //import for mat-label API\n    MatFormFieldModule,\n    MatInputModule,\n    //import for multiselect\n    MatSelectModule,\n    //import for browser animations\n    BrowserAnimationsModule,\n    //importing prime ng model\n    OverlayPanelModule,\n    ConfirmDialogModule,\n    MultiSelectModule,\n    AngularFireAuthModule,\n    //importing http module\n    HttpClientModule,\n    //import for microsoft auth\n    MsalModule.forRoot({\n      clientID: \"f1ac7d06-f07e-4a1a-96f7-428bc851cf15\",\n      consentScopes: [\"https://graph.microsoft.com/User.ReadWrite\",\"user.read\"],\n      postLogoutRedirectUri: \"http://localhost:4200/\"\n  }),\n    RouterModule.forRoot([\n      {path:'',component:HomeComponentComponent,canActivate: [MsalGuard]},\n      {path:'Users',component:UserListComponent,canActivate: [MsalGuard]},\n      {path:'DetailedMeeting',component:DetailedMeetingComponent,canActivate: [MsalGuard]},\n      {path:'MeetingsList',component:MeetingsListComponent,canActivate: [MsalGuard]},\n      {path:'CreateMeeting',component:CreateMeetingComponent,canActivate: [MsalGuard]},\n      {path:'Admissions',component:AdmissionsComponent,canActivate: [MsalGuard]},\n      {path:'DetailedAdmission',component:DetailedAdmissionComponent,canActivate: [MsalGuard]},\n      {path:'NoAccess',component:NoaccessComponent}\n    ])\n  ],\n  providers: [MatDatepickerModule,MeetingService,ConfirmationService,FileService,DatePipe],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \".styleForTextArea{\\n    width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3JlYXRlLW1lZXRpbmcvY3JlYXRlLW1lZXRpbmcuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7QUFDZiIsImZpbGUiOiJzcmMvYXBwL2NyZWF0ZS1tZWV0aW5nL2NyZWF0ZS1tZWV0aW5nLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc3R5bGVGb3JUZXh0QXJlYXtcbiAgICB3aWR0aDogMTAwJTtcbn0iXX0= */\"","import { Router } from \"@angular/router\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { CreateMeetingModel } from \"../Models/CreateMeetingModel\";\nimport { AngularFirestore } from \"@angular/fire/firestore\";\nimport { MeetingService } from '../Services/meeting.service';\nimport {ConfirmationService} from 'primeng/api';\nimport { AuthorizationServiceService } from '../Services/authorization-service.service';\n\n@Component({\n  selector: \"app-create-meeting\",\n  templateUrl: \"./create-meeting.component.html\",\n  styleUrls: [\"./create-meeting.component.css\"]\n})\nexport class CreateMeetingComponent implements OnInit {\n  showCreateMeetingForm: boolean;\nchairs:any[]=[];\n  disableCheckBox: boolean = false;\n  showAddAgendaItem: boolean;\n  lblToThrowDepartmentNotSelectedError: boolean;\n  createMeetingModelObject = new CreateMeetingModel();\n  subagendaItemsarray:any[][] = [[]];\n  subOfSubAgendaItemsArray:any[][][]=[];\n  items: any[] = [\n    {\n      agenda: \"\",\n      id: 1,\n      subAgendaItems: [],\n      duration: 0\n    }\n  ];\n\n  mainAgendaItem: any = {\n    agenda: \"\",\n    id: 1,\n    duration: 0,\n    subAgendaItems: []\n  };\n  subAgendaItem: any = {\n    subAgenda: \"\",\n    subId: 1,\n    subOfSubAgendaItems: []\n  };\n  subofSubAgendaItem: any = {\n    subofSubAgenda: \"\",\n    subOfSubId: 1\n  };\n  itemsArray: string[] = [];\n  selectedMeeting: CreateMeetingModel;\n  loggedInUserDataFromDB: any;\n  //subAgendaItems: any[];\n  //subOfSubAgendaItems: any[][];\n  //selectedDepratmentsList:string[] = [];\n  constructor(private db: AngularFirestore, private route: Router,private meetingService: MeetingService, private confirmationService: ConfirmationService,private authorizationService: AuthorizationServiceService) {\n    this.authorizationService.getUserFromAuthorizationServiceObj().subscribe(data => {\n      this.loggedInUserDataFromDB = data;\n      //console.log(\"in nav bar\",this.loggedInUserDataFromDB);\n    });\n    if(this.loggedInUserDataFromDB!=null){\n    this.createMeetingModelObject.facilitatedBy=this.loggedInUserDataFromDB.emailId;\n    //console.log(this.createMeetingModelObject.facilitatedBy);\n    }\n    db.collection(\"Users\").valueChanges().subscribe(data=>\n      {\n        //console.log(data);\n        for(let i=0; i<data.length;i++){\n          if(data[i]['Role']=='Chair'){\n            this.chairs.push(data[i]['emailId']);\n          }\n        }\n      });\n    this.createMeetingModelObject.inlineCheckbox1 = true;\n    this.onCheck(null);\n  }\n  submitToSaveMeeting() {\n    //date formatting\n    var date = new Date(this.createMeetingModelObject.date);\n    this.createMeetingModelObject.formateddate =\n      date.getMonth() + 1 + \"/\" + date.getDate() + \"/\" + date.getFullYear();\n\n    this.createMeetingModelObject.time =\n      this.createMeetingModelObject.HH +\n      \":\" +\n      this.createMeetingModelObject.MM +\n      \" \" +\n      this.createMeetingModelObject.noon;\n\n    //duration formatting\n    this.createMeetingModelObject.duration =\n      this.createMeetingModelObject.duration + \" Minutes\";\n\n    //department list formatting\n    this.createMeetingModelObject.departmentList = this.populateSelectedDepartmentList();\n    this.showCreateMeetingForm = !this.showCreateMeetingForm;\n\n    //agenda list formatting\n    for (let i = 0; i < this.items.length; i++) {\n      if (this.items[i].agenda != \"\") {\n        this.itemsArray.push(this.items[i].agenda);\n      }\n      this.items[i].subAgendaItems = this.subagendaItemsarray[i];\n    }\nconsole.log(this.items);\n    //saving to databases\n    //saving to AgendaList collection\n    this.db\n      .collection(\"AgendaList\")\n      .add({ wholeAgendaList: this.items,saveMeetingMinutesAndSendEmail:false})\n      .then(docref => {\n        //storing document id of AgendaList in a variable.\n        this.createMeetingModelObject.documentIdOfAgendaListCollection =\n          docref.id;\n          //this.db.collection(\"AgendaList\").doc(docref.id).update({documentIdOfAgendaListCollection:docref.id});\n      });\n    //saving to Meetings collection\n    this.db\n      .collection(\"Meetings\")\n      .add({\n        finalised: false,\n        subject: this.createMeetingModelObject.subject,\n        date: this.createMeetingModelObject.formateddate,\n        time: this.createMeetingModelObject.time,\n        duration: this.createMeetingModelObject.duration,\n        facilitatedBy: this.createMeetingModelObject.facilitatedBy,\n        department: this.createMeetingModelObject.departmentList,\n        agendaList: this.itemsArray,\n        approvals: [],\n        rejects: [],\n        files:[],\n        attendees:[],\n        downloadFiles:[],\n        comments: []\n      })\n      .then(ref => {\n        this.db.collection(\"AgendaList\").doc(this.createMeetingModelObject.documentIdOfAgendaListCollection)\n          .update({documentIdOfCurrentMeeting:ref.id, documentIdOfAgendaListCollection:this.createMeetingModelObject.documentIdOfAgendaListCollection});\n        this.db\n          .collection(\"Meetings\")\n          .doc(ref.id)\n          .update({\n            documentIdOfAgendaListCollection: this.createMeetingModelObject\n              .documentIdOfAgendaListCollection,\n            documentIdOfCurrentMeeting: ref.id\n          });\n          \n      });\n    \n    //formatting whole form to empty\n    this.createMeetingModelObject = new CreateMeetingModel();\n\n    //routing to MeetingListComponent\n    this.route.navigate([\"MeetingsList\"]);\n  }\n\n  cancel() {\n    this.createMeetingModelObject = new CreateMeetingModel();\n    this.route.navigate([\"MeetingsList\"]);\n  }\n  onCheck(event) {\n    if (this.createMeetingModelObject.inlineCheckbox1) {\n      this.createMeetingModelObject.inlineCheckbox2 = true;\n      this.createMeetingModelObject.inlineCheckbox3 = true;\n      this.createMeetingModelObject.inlineCheckbox4 = true;\n      this.createMeetingModelObject.inlineCheckbox5 = true;\n      this.disableCheckBox = true;\n    } else {\n      this.disableCheckBox = false;\n      this.createMeetingModelObject.inlineCheckbox2 = false;\n      this.createMeetingModelObject.inlineCheckbox3 = false;\n      this.createMeetingModelObject.inlineCheckbox4 = false;\n      this.createMeetingModelObject.inlineCheckbox5 = false;\n    }\n  }\n  populateSelectedDepartmentList() {\n    if (\n      !this.createMeetingModelObject.inlineCheckbox1 &&\n      !this.createMeetingModelObject.inlineCheckbox2 &&\n      !this.createMeetingModelObject.inlineCheckbox3 &&\n      !this.createMeetingModelObject.inlineCheckbox4 &&\n      !this.createMeetingModelObject.inlineCheckbox5\n    ) {\n      this.lblToThrowDepartmentNotSelectedError = true;\n    }\n    var array = [];\n    if (this.createMeetingModelObject.inlineCheckbox2) {\n      array.push(\"CS\");\n    }\n    if (this.createMeetingModelObject.inlineCheckbox3) {\n      array.push(\"CIS\");\n    }\n    if (this.createMeetingModelObject.inlineCheckbox4) {\n      array.push(\"IT\");\n    }\n    if (this.createMeetingModelObject.inlineCheckbox5) {\n      array.push(\"DS\");\n    }\n    return array;\n  }\n  newAgendaItem() {\n    console.log(this.items);\n    let id = this.items.length + 1;\n    this.items.push({\n      agenda: \"\",\n      id: id,\n      duration: null,\n      meetingMinutes: \"\",\n      subAgendaItems: ['']\n    });\n    this.subagendaItemsarray.push([]);\n    this.subOfSubAgendaItemsArray.push([]);\n\n  }\n  cancelAgendaItemInput() {\n    this.items.pop();\n  }\n  deleteAgendaItem(item) {\n    this.confirmationService.confirm({\n      message: 'Are you sure, do you want to delete this record?',\n      accept: () => { \n    //console.log(item);\n    const index: number = this.items.indexOf(item);\n    if (index !== -1) {\n      this.items.splice(index, 1);\n    }\n  }\n});\n  }\n  addNewSubAgendaItem(item) {\n    console.log(item.id);\n    if(this.subagendaItemsarray[item.id-1]!=null){\n      console.log(\"empty array\",item.id-1,this.subagendaItemsarray);\n          var subItem = {\n          subAgenda: \"\",\n          subId: this.subagendaItemsarray[item.id-1].length + 1,\n          meetingMinutes: \"\",\n          subOfSubAgendaItems: []\n        };\n       this.subagendaItemsarray[item.id-1].push(subItem);\n      \n    }\n    // this.items.forEach(value => {\n    //   if (value.id == item.id) {\n    //     var subItem = {\n    //       subAgenda: \"\",\n    //       subId: item.subAgendaItems.length + 1,\n    //       subOfSubAgendaItems: []\n    //     };\n    //     value.subAgendaItems.push(subItem);\n    //   }\n    // });\n  }\n  deleteSubAgendaItem(item,subItem){\n    this.confirmationService.confirm({\n      message: 'Are you sure, do you want to delete this record?',\n      accept: () => { \n    console.log(subItem);\n    console.log(this.subagendaItemsarray);\n    const indexOfMainAgendaItem: number = this.items.indexOf(item);\n    const index=subItem.subId-1;\n    console.log(index);\n    //const index: number = this.subagendaItemsarray[indexOfMainAgendaItem].indexOf(subItem);\n    console.log(index);\n    if (index !== -1) {\n      console.log(\"In if of delete sub\")\n      this.subagendaItemsarray[item.id-1].splice(index, 1);\n      console.log(\"length:\",this.subagendaItemsarray[item.id-1])\n       for(let i=0;i<this.subagendaItemsarray[item.id-1].length;i++){\n         this.subagendaItemsarray[item.id-1][i]['subId'] = i+1;\n       }\n    }\n  }\n});\n  }\n   addSubSubAgendaItem(item, subitem) {\n  //   this.items.forEach(value => {\n  //     if (value.id == item.id) {\n  //       console.log(\"empty\", value);\n  //       value.subAgendaItems.forEach(subValue => {\n  //         if (subValue.id == subitem.id) {\n  //           var subofSubItem = {\n  //             subofSubAgenda: \"\",\n  //             subOfSubId: subValue.subOfSubAgendaItems.length+1\n  //           };\n  //           subValue.subOfSubAgendaItems.push(subofSubItem);\n  //         }\n  //       });\n  //     }\n  //   });\n    console.log(subitem);\n    var subofSubItem = {\n                  subofSubAgenda: \"\",\n                  subOfSubId: subitem.subOfSubAgendaItems.length+1,\n                  meetingMinutes: \"\"\n                };\n                subitem.subOfSubAgendaItems.push(subofSubItem);\n                console.log(this.subagendaItemsarray);\n\n   }\n   deleteSubOfSubAgendaItem(j,i,subOfSubItem){\n    this.confirmationService.confirm({\n      message: 'Are you sure, do you want to delete this record?',\n      accept: () => { \n     console.log(subOfSubItem);\n     var tempArray=this.subagendaItemsarray[j][i]['subOfSubAgendaItems'];\n    \n    const index: number = tempArray.indexOf(subOfSubItem);\n     console.log(index);\n    if (index !== -1) {\n      console.log(\"In if of delete sub\")\n      tempArray.splice(index, 1);\n    }\n  }\n});\n  }\n  ngOnInit() {\n  //   this.meetingService.getSelectedMeetingObj().subscribe(data => {\n  //     this.selectedMeeting = data;});\n  //     if (this.selectedMeeting.operation=='Edit'){\n  //       this.createMeetingModelObject=this.selectedMeeting;\n  //       this.selectedMeeting.operation='';\n  //     }\n   }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RldGFpbGVkLWFkbWlzc2lvbi9kZXRhaWxlZC1hZG1pc3Npb24uY29tcG9uZW50LmNzcyJ9 */\"","import { AngularFirestore } from '@angular/fire/firestore';\nimport { Component, OnInit } from '@angular/core';\nimport { AdmissionsService } from '../Services/admissions.service';\nimport { FileService } from '../Services/file.service';\nimport { AdmissionsModel } from '../Models/AdmissionsModel';\nimport { AuthorizationServiceService } from '../Services/authorization-service.service';\nimport { ConfirmationService } from 'primeng/api';\n@Component({\n  selector: 'app-detailed-admission',\n  templateUrl: './detailed-admission.component.html',\n  styleUrls: ['./detailed-admission.component.css']\n})\nexport class DetailedAdmissionComponent implements OnInit {\n  selectedStudent: any;\n  showCommentSection: boolean = false;\n  commentText: string;\n  admissionsModelObject = new AdmissionsModel();\n  loggedInUserDataFromDB: any;\n  buttonValue: any;\n  rejectionReasons: any = [];\n  rejectionPossibleReasons = ['GRE Total too low', 'Verbal below 140', 'Quant below 150', 'GPA too low', 'Weak academic performance in foundation', 'Inadeqaute preparation for the MS program']\n  showRejectOptions: boolean = false;\n  rejectClicked: boolean = true;\n  constructor(private admissionsService: AdmissionsService, private fileService: FileService, private db: AngularFirestore, private authorizationService: AuthorizationServiceService, private confirmationService: ConfirmationService) {\n    this.authorizationService.getUserFromAuthorizationServiceObj().subscribe(data => {\n      this.loggedInUserDataFromDB = data;\n      //console.log(\"in nav bar\",this.loggedInUserDataFromDB);\n\n    });\n  }\n  open(url) {\n    window.open(url, \"_blank\");\n  }\n  downloadFile(uniqueNameForReference, linkToView, typeOfFile) {\n    this.fileService.setHttpRequestToDownloadFile(uniqueNameForReference, linkToView, typeOfFile);\n  }\n  acceptAdmission(event) {\n    this.confirmationService.confirm({\n      message: 'Are you sure, do you want to Accept Admission? You can provide some optional Prerequisities below',\n      header: this.selectedStudent.studentId,\n      accept: () => {\n        this.showRejectOptions = false;\n        this.buttonValue = event.srcElement.value;\n        //console.log(\"hai\")\n        if (!this.selectedStudent.accepts.includes(this.loggedInUserDataFromDB.emailId)) {\n          this.selectedStudent.accepts.push(this.loggedInUserDataFromDB.emailId);\n\n        }\n        if (this.selectedStudent.rejects.includes(this.loggedInUserDataFromDB.emailId)) {\n          this.selectedStudent.rejects.splice(this.selectedStudent.rejects.indexOf(this.loggedInUserDataFromDB.emailId), 1);\n        }\n        if (this.selectedStudent.accepts.length > 1) {\n          this.selectedStudent.status = 'Accepted';\n        }\n        else {\n          if (this.selectedStudent.rejects.length > 1) {\n            this.selectedStudent.status = 'Rejected';\n          }\n          else {\n            this.selectedStudent.status = 'Under Review';\n          }\n        }\n        if(this.loggedInUserDataFromDB.emailId in this.selectedStudent.rejectionReasonsFromModel){\n          //console.log(\"Hi\")\n          delete this.selectedStudent.rejectionReasonsFromModel[this.loggedInUserDataFromDB.emailId];\n        }\n        this.showCommentSection = true;\n        this.db.collection(\"Admissions\").doc(`${this.selectedStudent.studentId}`).update({ rejects: this.selectedStudent.rejects, accepts: this.selectedStudent.accepts, status: this.selectedStudent.status,rejectionReasonsFromModel: this.selectedStudent.rejectionReasonsFromModel})\n\n      }\n    });\n\n  }\n  saveComment() {\n    //this.selectedStudent.comments.push({comment:this.commentText, decision:this.buttonValue, commentedBy:this.loggedInUserDataFromDB.emailId})\n    this.showCommentSection = false;\n    if (this.commentText != null) {\n      if (this.selectedStudent.comments.length > 0) {\n        for (let i = 0; i < this.selectedStudent.comments.length; i++) {\n          if (this.loggedInUserDataFromDB.emailId == this.selectedStudent.comments[i].commentedBy) {\n            this.selectedStudent.comments.splice(i, 1);\n            this.selectedStudent.comments.push({ comment: this.commentText, decision: this.buttonValue, commentedBy: this.loggedInUserDataFromDB.emailId })\n          }\n          else {\n            this.selectedStudent.comments.push({ comment: this.commentText, decision: this.buttonValue, commentedBy: this.loggedInUserDataFromDB.emailId })\n          }\n        }\n      }\n      else {\n        this.selectedStudent.comments.push({ comment: this.commentText, decision: this.buttonValue, commentedBy: this.loggedInUserDataFromDB.emailId })\n\n      }\n\n      this.db.collection(\"Admissions\").doc(`${this.selectedStudent.studentId}`).update({ comments: this.selectedStudent.comments })\n    }\n  }\n  rejectAdmission() {\n    this.confirmationService.confirm({\n      message: 'Are you sure, do you want to Reject Admission for this student? You need to select reasons below',\n      header: this.selectedStudent.studentId,\n      accept: () => {\n        this.showCommentSection = false;\n        \n        this.showRejectOptions = true;\n      }\n    });\n  }\n  saveRejectionReasons(event) {\n    this.confirmationService.confirm({\n      message: 'Are you sure, do you want to Reject Admission for this student?',\n      header: this.selectedStudent.studentId,\n      accept: () => {\n        if (this.rejectClicked == true) {\n          this.buttonValue = event.srcElement.value;\n          if (!this.selectedStudent.rejects.includes(this.loggedInUserDataFromDB.emailId)) {\n            this.selectedStudent.rejects.push(this.loggedInUserDataFromDB.emailId);\n\n          }\n          if (this.selectedStudent.accepts.includes(this.loggedInUserDataFromDB.emailId)) {\n            this.selectedStudent.accepts.splice(this.selectedStudent.accepts.indexOf(this.loggedInUserDataFromDB.emailId), 1);\n          }\n          //this.selectedStudent.rejects.push(this.loggedInUserDataFromDB.emailId);\n          this.selectedStudent.rejectionReasonsFromModel[this.loggedInUserDataFromDB.emailId] = this.buttonValue+'-->'+this.rejectionReasons;\n          if (this.selectedStudent.rejects.length > 1) {\n            this.selectedStudent.status = 'Rejected';\n          }\n          else {\n            if (this.selectedStudent.accepts.length > 1) {\n              this.selectedStudent.status = 'Accepted';\n            }\n            else {\n              this.selectedStudent.status = 'Under Review';\n            }\n          }\n          for (let i = 0; i < this.selectedStudent.comments.length; i++) {\n            if (this.loggedInUserDataFromDB.emailId == this.selectedStudent.comments[i].commentedBy) {\n              this.selectedStudent.comments.splice(i, 1);\n            }\n          }\n          this.db.collection(\"Admissions\").doc(`${this.selectedStudent.studentId}`).update({ rejectionReasonsFromModel: this.selectedStudent.rejectionReasonsFromModel, rejects: this.selectedStudent.rejects, accepts: this.selectedStudent.accepts, status: this.selectedStudent.status,comments: this.selectedStudent.comments})\n        }\n      }\n    });\n  }\n  ngOnInit() {\n    this.admissionsService.getSelectedStudentObj().subscribe(data => {\n      this.selectedStudent = data;\n    });\n    //console.log(this.selectedStudent);\n  }\n\n}\n","export default \".styleForInput{\\n    border:none; \\n    outline:none;\\n    background-color:lightblue;\\n}\\n.styleForATag{\\n    -webkit-text-decoration:blue;\\n            text-decoration:blue;\\n    text-decoration: underline;\\n\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGV0YWlsZWQtbWVldGluZy9kZXRhaWxlZC1tZWV0aW5nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0lBQ1gsWUFBWTtJQUNaLDBCQUEwQjtBQUM5QjtBQUNBO0lBQ0ksNEJBQW9CO1lBQXBCLG9CQUFvQjtJQUNwQiwwQkFBMEI7O0FBRTlCIiwiZmlsZSI6InNyYy9hcHAvZGV0YWlsZWQtbWVldGluZy9kZXRhaWxlZC1tZWV0aW5nLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc3R5bGVGb3JJbnB1dHtcbiAgICBib3JkZXI6bm9uZTsgXG4gICAgb3V0bGluZTpub25lO1xuICAgIGJhY2tncm91bmQtY29sb3I6bGlnaHRibHVlO1xufVxuLnN0eWxlRm9yQVRhZ3tcbiAgICB0ZXh0LWRlY29yYXRpb246Ymx1ZTtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcblxufSJdfQ== */\"","import { AngularFirestore } from '@angular/fire/firestore';\nimport { AngularFireStorage } from '@angular/fire/storage';\nimport { Component, OnInit } from '@angular/core';\nimport { CreateMeetingModel } from '../Models/CreateMeetingModel';\nimport { MeetingService } from '../Services/meeting.service';\nimport { Router } from '@angular/router';\nimport { AuthorizationServiceService } from '../Services/authorization-service.service';\nimport {ConfirmationService} from 'primeng/api';\nimport {MultiSelect} from 'primeng/multiselect';\nimport {FormControl} from '@angular/forms';\nimport {MatSelect} from '@angular/material/select';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { FileService } from '../Services/file.service';\n@Component({\n  selector: 'app-detailed-meeting',\n  templateUrl: './detailed-meeting.component.html',\n  styleUrls: ['./detailed-meeting.component.css']\n})\nexport class DetailedMeetingComponent implements OnInit {\n  attendance = new FormControl();\n  showDetailedMeeting: boolean = false;\n  finalised: boolean = true;\n  rejectClicked: boolean = false;\n  selectedMeeting: CreateMeetingModel;\n  loggedInUserDataFromDB: any = null;\n  commentByUser: any[];\n  createMeetingModelObject2 = new CreateMeetingModel();\n  agendaList: any[];\n  editingVariable:boolean=false;\n  isempty:boolean = true;\n  //lengthOfArrayOfApprovals:number=this.selectedMeeting.approvals\n  comment: any;\n  downloadURL: any;\n  dataForAttendance=[];\n  comments= [];\n  //attendees:string[]=[];\n  //allSelected: any;\n  constructor(private meetingService: MeetingService, private storage: AngularFireStorage, private route: Router, private db: AngularFirestore, private authorizationService: AuthorizationServiceService, private confirmationService: ConfirmationService, private http:HttpClient, private sanitizer:DomSanitizer, private fileService:FileService) {\n    this.authorizationService.getUserFromAuthorizationServiceObj().subscribe(data => {\n      this.loggedInUserDataFromDB = data;\n      //console.log(\"in nav bar\",this.loggedInUserDataFromDB);\n    });\n    db.collection(\"Users\").valueChanges().subscribe(data=>\n      {\n        //console.log(data);\n        this.dataForAttendance=data\n    });\n  }\n\n  ngOnInit() {\n    this.meetingService.getSelectedMeetingObj().subscribe(data => {\n      this.selectedMeeting = data;\n      if(this.selectedMeeting!=null){\n      this.comment = this.selectedMeeting['comments'][this.loggedInUserDataFromDB.emailId];\n      this.db.collection(\"AgendaList\").doc(this.selectedMeeting.documentIdOfAgendaListCollection).valueChanges().subscribe(data => this.agendaList = data['wholeAgendaList']);\n      //console.log(this.selectedMeeting);\n      }\n    });\n    //this.selectedMeeting.attendees=[];\n    //this.downloadURL = this.storage.ref('gs://myfirstdemoforfiredb.appspot.com/bv3556dcnpe14ej6fa1').getDownloadURL();\n  }\n  showAddMeetingMinutesForm() {\n    //console.log(this.agendaList);\n    this.db.collection(\"AgendaList\").doc(this.selectedMeeting.documentIdOfAgendaListCollection).update({ wholeAgendaList: this.agendaList });\n    //this.route.navigate(['AddMeetingMinutes']);\n  }\n  saveMeetingMinutesAndSendEmail(){\n    this.db.collection(\"AgendaList\").doc(this.selectedMeeting.documentIdOfAgendaListCollection).update({wholeAgendaList: this.agendaList,saveMeetingMinutesAndSendEmail:true});\n    this.db.collection(\"AgendaList\").doc(this.selectedMeeting.documentIdOfAgendaListCollection).update({saveMeetingMinutesAndSendEmail:false});\n\n\n  }\n  finaliseMeetingMinutes() {\n    this.confirmationService.confirm({\n      message: 'Are you sure, do you want to Finalise this Meeting?(You cannot perform any action like edit and delete anymore)',\n      header:\"Finalise?\",\n      accept: () => { \n    //this.finalised=true;\n    this.selectedMeeting.finalised = true;\n    this.db.collection(\"Meetings\").doc(this.selectedMeeting.documentIdOfCurrentMeeting).update({ finalised: true })\n      }\n  });\n  }\n\n  rejectButtonClicked() {\n    this.confirmationService.confirm({\n      message: 'Are you sure, do you want to Reject this Meeting? Makesure you need to provide a mandatory reason for your Rejection',\n      header:this.selectedMeeting.subject,\n      accept: () => { \n    this.rejectClicked = true;\n  }\n});\n  }\n  approveButtonClicked() {\n    if (!this.selectedMeeting.approvals.some((item) => item == this.loggedInUserDataFromDB.emailId)) {\n      this.selectedMeeting.approvals.push(this.loggedInUserDataFromDB.emailId);\n    }\n    if (this.selectedMeeting.rejects.some((item) => item == this.loggedInUserDataFromDB.emailId)) {\n      this.selectedMeeting.rejects.splice(this.selectedMeeting.rejects.indexOf(this.loggedInUserDataFromDB.emailId), 1);\n    }\n    this.db.collection(\"Meetings\").doc(this.selectedMeeting.documentIdOfCurrentMeeting).update({ rejects: this.selectedMeeting.rejects, approvals: this.selectedMeeting.approvals })\n  }\n  saveComment() {\n    //this.commentByUser.append()\n    //this\n    this.confirmationService.confirm({\n      message: 'Are you sure, do you want to Post this Comment?',\n      header:this.comment,\n      accept: () => { \n    this.rejectClicked = false;\n    if (!this.selectedMeeting.rejects.some((item) => item == this.loggedInUserDataFromDB.emailId)) {\n      this.selectedMeeting.rejects.push(this.loggedInUserDataFromDB.emailId);\n      \n    }\n    if (this.selectedMeeting.approvals.some((item) => item == this.loggedInUserDataFromDB.emailId)) {\n      this.selectedMeeting.approvals.splice(this.selectedMeeting.approvals.indexOf(this.loggedInUserDataFromDB.emailId), 1);\n    }\n    this.selectedMeeting.comments.push([this.loggedInUserDataFromDB.emailId] +'-->'+this.comment);\n    this.db.collection(\"Meetings\").doc(this.selectedMeeting.documentIdOfCurrentMeeting).update({ comments: this.selectedMeeting.comments, rejects: this.selectedMeeting.rejects, approvals: this.selectedMeeting.approvals })\n  }\n});\n\n  }\n  cancelCommentSection() {\n    this.rejectClicked = false;\n  }\n\n  uploadFile(event) {\n    //   const file = event.target.files[0];\n    // const filePath = 'name-your-file-path-here';\n    // const task = this.storage.upload(filePath, file);\n    var timeStamp = Math.floor(Date.now() / 1000).toString(20);\n    var randomId = Math.random().toString(36).substring(2);\n    randomId = randomId + timeStamp;\n    // randomId=randomId+\n    this.storage.upload(randomId, event.target.files[0]).snapshotChanges().subscribe(data => {\n      //console.log(\"console.log\",data);\n      this.storage.ref(randomId).getDownloadURL().subscribe(data=>{\n        if(data!=null){\n          let downloadUrl = data;\n          //this.selectedMeeting.downloadFiles[randomId]=downloadUrl;\n          //console.log(this.selectedMeeting.downloadFiles);\n          this.selectedMeeting.downloadFiles.push({\n            uniqueNameForReference:randomId,\n            linkToView:downloadUrl,\n            typeOfFile:event.target.files[0].type\n          })\n          this.db.collection(\"Meetings\").doc(this.selectedMeeting.documentIdOfCurrentMeeting).update({ downloadFiles: this.selectedMeeting.downloadFiles });\n        }\n      });\n    });\n  \n    //const downloadUrl = this.storage.ref(randomId).getDownloadURL().subscribe(data => console.log(data,\"shourya\"));\n    //console.log(downloadUrl,this.selectedMeeting);\n    \n    \n     //console.log(event.target.files[0].type);\n  }\n  deleteFile(ref1,i){\n    this.confirmationService.confirm({\n      message: 'Are you sure, do you want to delete this File?',\n      header:ref1,\n      accept: () => { \n    //console.log(ref1,i);\n    var deleteRef = this.storage.ref(ref1)\n\n    // Delete the file\n    deleteRef.delete()\n    //this.selectedMeeting.downloadFiles.\n    //const index: number = this.selectedMeeting.downloadFiles.indexOf(ref1);\n     if (i !== -1) {\n     this.selectedMeeting.downloadFiles.splice(i, 1);\n     \n     }\n    this.db.collection(\"Meetings\").doc(this.selectedMeeting.documentIdOfCurrentMeeting).update({ downloadFiles: this.selectedMeeting.downloadFiles });\n  }\n});\n\n  }\n  downloadFile(uniqueNameForReference,linkToView,typeOfFile){\n this.fileService.setHttpRequestToDownloadFile(uniqueNameForReference,linkToView,typeOfFile);\n  //   console.log(linkToView);\n  // this.http.get(linkToView,{responseType: 'blob' })\n  //  .subscribe(data => {\n  //   const blob = new Blob([data], { type: 'text' })\n  //   saveAs(blob,\"filename\");\n\n  //});\n\n\n  \n  \n  }\n  // downLoadFile(data: any, type: string) {\n  //   console.log('in download',data,type);\n  //   let blob = new Blob([data], { type: type});\n  //   let url = window.URL.createObjectURL(blob);\n  //   let pwa = window.open(url);\n  //   if (!pwa || pwa.closed || typeof pwa.closed == 'undefined') {\n  //       alert( 'Please disable your Pop-up blocker and try again.');\n  //   }\n  // }\n  deleteMeeting() {\n    this.confirmationService.confirm({\n      message: 'Are you sure, do you want to delete this record?',\n      accept: () => { \n    this.db.collection(\"AgendaList\").doc(this.selectedMeeting.documentIdOfAgendaListCollection).delete()\n      .then(function () {\n        console.log(\"Document Successfull deleted!\");\n      }).catch(\n        function (error) {\n          console.error(\"Error removing document:\", error);\n        }\n      );\n      this.db.collection(\"Meetings\").doc(this.selectedMeeting.documentIdOfCurrentMeeting).delete()\n      .then(function () {\n        console.log(\"Document Successfull deleted!\");\n      }).catch(\n        function (error) {\n          console.error(\"Error removing document:\", error);\n        }\n      );\n    this.route.navigate([\"MeetingsList\"]);\n  }\n});\n  }\n  editMeeting(){\n    // this.selectedMeeting.operation='Edit';\n    // this.route.navigate(['CreateMeeting']);\n    this.editingVariable=true;\n  }\n  saveChanges(){\n    this.editingVariable=false;\n    this.db.collection(\"Meetings\").doc(this.selectedMeeting.documentIdOfCurrentMeeting).update({ subject: this.selectedMeeting.subject, date:this.selectedMeeting.date, time:this.selectedMeeting.time, duration:this.selectedMeeting.duration, facilitatedBy:this.selectedMeeting.facilitatedBy });\n  }\nopen(url){\n  window.open(url,\"_blank\");\n}\nselectingAllForAttendance(){\n  let arr = [];\n  arr.push(true);\n  this.dataForAttendance.forEach(element => {\n    //console.log(element.emailId);\n    arr.push(element.emailId);\n    \n  });\n  this.isempty ? this.attendance.setValue(arr):this.attendance.setValue([]);\n  this.isempty = false;\n  const indext: number = this.attendance.value.indexOf(true);\n    if (indext !== -1) {\n      this.attendance.value.splice(indext, 1);\n     \n    }\n    const indexf: number = this.attendance.value.indexOf(false);\n    if (indexf !== -1) {\n      this.attendance.value.splice(indexf, 1);\n     \n    }\n  //console.log(\"array\",this.attendance.value); \n}\nupdatingAttendanceToDataBase(){\n  //console.log(\"MouseOUT\");\n  \n    for(let i=0; i<this.attendance.value.length; i++){\n      if(!this.selectedMeeting.attendees.includes(this.attendance.value[i])){\n          this.selectedMeeting.attendees.push(this.attendance.value[i]);\n      }\n    }\n    this.db.collection(\"Meetings\").doc(this.selectedMeeting.documentIdOfCurrentMeeting).update({ attendees: this.selectedMeeting.attendees });\n    \n}\n\n\n}\n\n\n\n\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUtY29tcG9uZW50L2hvbWUtY29tcG9uZW50LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthorizationServiceService } from '../Services/authorization-service.service';\n@Component({\n  selector: 'app-home-component',\n  templateUrl: './home-component.component.html',\n  styleUrls: ['./home-component.component.css']\n})\nexport class HomeComponentComponent implements OnInit {\n  loggedInUserDataFromDB:any=null;\n  constructor(private authorizationService:AuthorizationServiceService) { \n    this.authorizationService.getUserFromAuthorizationServiceObj().subscribe(data => {\n      this.loggedInUserDataFromDB = data;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n}\n","export default \".datatable{\\n    width:100%;\\n}\\n.descriptionStyle{\\n    word-wrap: break-word\\u2029;\\n}\\n.StyleForSearch{\\n    width:100%;\\n}\\n.pointer {\\n    cursor: pointer;\\n}\\nth.mat-sort-header-sorted {\\n    color: black;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVldGluZ3MtbGlzdC9tZWV0aW5ncy1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2Q7QUFDQTtJQUNJLHNCQUFzQjtBQUMxQjtBQUNBO0lBQ0ksVUFBVTtBQUNkO0FBQ0E7SUFDSSxlQUFlO0FBQ25CO0FBQ0E7SUFDSSxZQUFZO0VBQ2QiLCJmaWxlIjoic3JjL2FwcC9tZWV0aW5ncy1saXN0L21lZXRpbmdzLWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kYXRhdGFibGV7XG4gICAgd2lkdGg6MTAwJTtcbn1cbi5kZXNjcmlwdGlvblN0eWxle1xuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZOKAqTtcbn1cbi5TdHlsZUZvclNlYXJjaHtcbiAgICB3aWR0aDoxMDAlO1xufVxuLnBvaW50ZXIge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbn1cbnRoLm1hdC1zb3J0LWhlYWRlci1zb3J0ZWQge1xuICAgIGNvbG9yOiBibGFjaztcbiAgfSJdfQ== */\"","import { CreateMeetingModel } from './../Models/CreateMeetingModel';\nimport { Component, OnInit,ViewChild } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { DetailedMeetingComponent } from '../detailed-meeting/detailed-meeting.component';\nimport { MeetingService } from '../Services/meeting.service';\nimport {MatTableDataSource} from '@angular/material/table';\n//Router is for navigation between components/pages\nimport { Router } from '@angular/router';\nimport { AuthorizationServiceService } from '../Services/authorization-service.service';\nimport {MatSort} from '@angular/material/sort';\n@Component({\n  selector: 'app-meetings-list',\n  templateUrl: './meetings-list.component.html',\n  styleUrls: ['./meetings-list.component.css']\n})\nexport class MeetingsListComponent implements OnInit {\nmeetings:MatTableDataSource<any>;\nloggedInUserDataFromDB:any={};\n@ViewChild(MatSort, {static: true}) sort: MatSort;\n//detailedMeetingComponentObject=new DetailedMeetingComponent();\nagendaList:any[];\ndisplayedColumns: string[] = ['Subject', 'Date','Time','Duration', 'Department', 'facilitatedBy','AgendaList'];\n  constructor(private db1:AngularFirestore, private meetingService:MeetingService, private route:Router, private authorizationService:AuthorizationServiceService){\n    db1.collection(\"Meetings\").valueChanges().subscribe(data=>\n      {\n        \n        this.meetings=new MatTableDataSource(data);\n        this.meetings.sort = this.sort;\n    });\n    this.authorizationService.getUserFromAuthorizationServiceObj().subscribe(data => {\n      if(data!=null){\n      this.loggedInUserDataFromDB = data;\n      }\n    });\n   }\n   getMeeting(meet){ \n    this.meetingService.setDataFromMeetingList(meet)\n    this.route.navigate(['DetailedMeeting']);\n    \n   }\n   createMeeting(){\n     \n     this.route.navigate(['CreateMeeting']);\n   }\n   applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.meetings.filter = filterValue.trim().toLowerCase();\n  }\n\n  ngOnInit() {\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdmlnYXRpb24tYmFyL25hdmlnYXRpb24tYmFyLmNvbXBvbmVudC5jc3MifQ== */\"","import { AngularFirestore } from '@angular/fire/firestore';\nimport { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from \"@angular/fire/auth\";\nimport * as firebase from 'firebase';\nimport { MsalService } from '@azure/msal-angular';\nimport { AuthorizationServiceService } from '../Services/authorization-service.service';\n@Component({\n  selector: 'app-navigation-bar',\n  templateUrl: './navigation-bar.component.html',\n  styleUrls: ['./navigation-bar.component.css']\n})\nexport class NavigationBarComponent implements OnInit {\n  provider : firebase.auth.OAuthProvider\n  user:any = null;\n  userEmail:string=null;\n  loggedInUserDataFromDB:any=null;\n  constructor(private auth:AngularFireAuth, private authservice:MsalService, private db:AngularFirestore, private authorizationService:AuthorizationServiceService) { \n    this.authorizationService.getUserFromAuthorizationServiceObj().subscribe(data => {\n      this.loggedInUserDataFromDB = data;\n    });\n  }\n\n  ngOnInit() {\n    \n    // this.user = this.authservice.getUser();\n    // this.userEmail=this.user.idToken.preferred_username;\n    // console.log(\"nav bar\",this.userEmail);\n    // this.db.collection(\"Users\").doc(this.userEmail).get().subscribe(doc=>{console.log(\"from DB\",doc.data())})\n  }\n  logout(){\n    this.authservice.logout();\n  } \n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vYWNjZXNzL25vYWNjZXNzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-noaccess',\n  templateUrl: './noaccess.component.html',\n  styleUrls: ['./noaccess.component.css']\n})\nexport class NoaccessComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \".datatable{\\n    width:100%;\\n}\\n.StyleForSearch{\\n    width:100%;\\n}\\nth.mat-sort-header-sorted {\\n    color: black;\\n  }\\n.hidden{ visibility: hidden; }\\n.visible{ visibility: visible; }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci1saXN0L3VzZXItbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksVUFBVTtBQUNkO0FBQ0E7SUFDSSxVQUFVO0FBQ2Q7QUFDQTtJQUNJLFlBQVk7RUFDZDtBQUNBLFNBQVMsa0JBQWtCLEVBQUU7QUFBRSxVQUFVLG1CQUFtQixFQUFFIiwiZmlsZSI6InNyYy9hcHAvdXNlci1saXN0L3VzZXItbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRhdGF0YWJsZXtcbiAgICB3aWR0aDoxMDAlO1xufVxuLlN0eWxlRm9yU2VhcmNoe1xuICAgIHdpZHRoOjEwMCU7XG59XG50aC5tYXQtc29ydC1oZWFkZXItc29ydGVkIHtcbiAgICBjb2xvcjogYmxhY2s7XG4gIH1cbiAgLmhpZGRlbnsgdmlzaWJpbGl0eTogaGlkZGVuOyB9IC52aXNpYmxleyB2aXNpYmlsaXR5OiB2aXNpYmxlOyB9Il19 */\"","//import { PopupModule } from 'ng2-opd-popup';\nimport { User } from './../Models/User';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatSort} from '@angular/material/sort';\nimport {ConfirmationService} from 'primeng/api';\nimport { AuthorizationServiceService } from '../Services/authorization-service.service';\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n  users:MatTableDataSource<any>;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  roles=['Admin','Faculty','Chair','Admission','Waiver'];\n  departments=['CS','CIS','IT','DS'];\n  showAddUserForm:boolean;\n  showUpdateUserForm:Boolean;\n  editClicked:boolean=false;\n  title = 'myFirstDemoForFireDB';\n  usersEmailIdsForValidation:string[]=[];\n  tempUser:any = {};\n  // dataq:any[] = [\n  //   {firstName:'hi',lastName:'ji',Role:'tt',emailId:'re',department:'ee'}\n  //   ,{firstName:'ri',lastName:'wi',Role:'qt',emailId:'ae',department:'ae'}\n  // ]\n  //Below is for database coulmn names\n  displayedColumns: string[] = ['Action','firstName', 'lastName', 'Role', 'emailId','department'];\n  addUserObject=new User();\n  loggedInUserDataFromDB: any= {};\n  constructor (private db:AngularFirestore,private confirmationService: ConfirmationService,private authorizationService: AuthorizationServiceService){\n    //this.users = new MatTableDataSource(this.dataq);\n    //this.users.sort = this.sort;\n    this.authorizationService.getUserFromAuthorizationServiceObj().subscribe(data => {\n      if(data!=null){\n      this.loggedInUserDataFromDB = data;\n      }\n      //console.log(\"in nav bar\",this.loggedInUserDataFromDB);\n    });\n    db.collection(\"Users\").valueChanges().subscribe(data=>\n      {\n        console.log(data);\n        this.users=new MatTableDataSource(data);\n        this.users.sort = this.sort;\n        for(let i=0;i<data.length;i++){\n          this.usersEmailIdsForValidation.push(data[i]['emailId'])\n        }\n        \n    });\n  \n  }\n  \n  addUser(){\n    this.showAddUserForm=true;\n  }\n  submitToSaveUser(){\n  this.showAddUserForm=!this.showAddUserForm;\n  console.log(\"hc\",this.addUserObject.admissionApplicationReviewer);\n this.db.collection(\"Users\").doc(this.addUserObject.email).set({firstName:this.addUserObject.firstName,lastName:this.addUserObject.lastName,emailId:this.addUserObject.email,department:this.addUserObject.department,Role:this.addUserObject.role,admissionApplicationReviewer:this.addUserObject.admissionApplicationReviewer}).then(error => console.log(error));\n \n if(this.editClicked==true){\n if(this.tempUser.emailId!=this.addUserObject.email){\n   this.deleteUser(this.tempUser)\n   this.tempUser={};\n }\n this.editClicked=false;\n }\n this.addUserObject=new User(); \n}\n  editButtonClicked(presentUser){\n    this.editClicked=true;\n    this.tempUser=presentUser;\n    this.addUserObject.department=presentUser.department;\n    this.addUserObject.role=presentUser.Role;\n    this.addUserObject.email=presentUser.emailId;\n    this.addUserObject.firstName=presentUser.firstName;\n    this.addUserObject.lastName=presentUser.lastName;\n    this.addUserObject.admissionApplicationReviewer=presentUser.admissionApplicationReviewer;\n    this.showAddUserForm=true;\n  }\n  /*updateButtonClicked(){\n    this.showAddUserForm=!this.showAddUserForm;\n    this.db.collection(\"Users\").doc(this.addUserObject.email).set({firstName:this.addUserObject.firstName,lastName:this.addUserObject.lastName,emailId:this.addUserObject.email,department:this.addUserObject.department,Role:this.addUserObject.role}).then(error => console.log(error));\n  \n  }*/\n  deleteUser(presentUser){\n    this.confirmationService.confirm({\n      message: 'Are you sure, do you want to delete this record?',\n      header:presentUser.firstName+\" \"+presentUser.lastName,\n      accept: () => {\nthis.db.collection(\"Users\").doc(presentUser.emailId).delete()\n.then(function(){\n  console.log(\"Document Successfull deleted!\");\n}).catch(\n  function(error){\n    console.error(\"Error removing document:\",error);\n  }\n);\n}\n});\n  }\n  cancel(){\n    this.showAddUserForm=!this.showAddUserForm;\n    this.editClicked=false;\n    this.addUserObject=new User(); \n\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.users.filter = filterValue.trim().toLowerCase();\n  }\n  ngOnInit() {\n    \n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  fireBase: {\n    apiKey: \"AIzaSyDOc78vAcDRjec43Dy4pH4ds0aWvqcOs8g\",\n    authDomain: \"myfirstdemoforfiredb.firebaseapp.com\",\n    databaseURL: \"https://myfirstdemoforfiredb.firebaseio.com\",\n    projectId: \"myfirstdemoforfiredb\",\n    storageBucket: \"myfirstdemoforfiredb.appspot.com\",\n    messagingSenderId: \"659839345722\",\n    appId: \"1:659839345722:web:378c0073684ed98816c103\",\n    measurementId: \"G-WDJCG6W9TY\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///","file":"main-es5.js"}